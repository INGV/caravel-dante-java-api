/*
 * Dante Web Services
 *       # Introduction   Dante is an API Web Service used for iteract with earthquake data stored in database (**quakedb**); the **quakedb** database schema is used at INGV.   Use other schema would require cration of specific `Model` and `Controller` but this is the potential of web services.      Dante provides a set of routes to store message **event**, **origin**, **magnitude**, **arrival**, **...**.      # Input   As input, Dante acept:   - A `json` message (view '**store**' spec below)    - An Eartworm `json` message (view '**earthworm api**' spec below) produced by **ew2openapi** module      # Output   As output, Dante has a RESTful api foreach database table and implement three specific routes:    - `events-pref`: returns the preferred origin and the preferred magnitude from all clusterd events.    - `events`: returns the preferred origin and the preferred magnitude from the same instance.    - `event`: returns the full event (event, origins, magnitudes, arrivals, amplitude, etc...) from an **eventid** or **originid**_/_**originid**.        
 *
 * The version of the OpenAPI document: 2.46.0
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.dante.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.ingv.dante.model.ObjectProvenaceForOriginsEventsAndEventsPref;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.ingv.dante.JSON;

/**
 * ObjectMagnitudeForOriginsEventsAndEventsPref
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-06-24T13:56:25.560692Z[Etc/UTC]")
public class ObjectMagnitudeForOriginsEventsAndEventsPref {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_ID_LOCALSPACE = "id_localspace";
  @SerializedName(SERIALIZED_NAME_ID_LOCALSPACE)
  private Long idLocalspace;

  public static final String SERIALIZED_NAME_LOCALSPACE = "localspace";
  @SerializedName(SERIALIZED_NAME_LOCALSPACE)
  private String localspace;

  public static final String SERIALIZED_NAME_MAG = "mag";
  @SerializedName(SERIALIZED_NAME_MAG)
  private Double mag;

  public static final String SERIALIZED_NAME_TYPE_MAGNITUDE = "type_magnitude";
  @SerializedName(SERIALIZED_NAME_TYPE_MAGNITUDE)
  private String typeMagnitude;

  public static final String SERIALIZED_NAME_LOWER_UNCERTAINTY = "lower_uncertainty";
  @SerializedName(SERIALIZED_NAME_LOWER_UNCERTAINTY)
  private Double lowerUncertainty;

  public static final String SERIALIZED_NAME_UPPER_UNCERTAINTY = "upper_uncertainty";
  @SerializedName(SERIALIZED_NAME_UPPER_UNCERTAINTY)
  private Double upperUncertainty;

  public static final String SERIALIZED_NAME_QUALITY = "quality";
  @SerializedName(SERIALIZED_NAME_QUALITY)
  private Double quality;

  public static final String SERIALIZED_NAME_MAG_QUALITY = "mag_quality";
  @SerializedName(SERIALIZED_NAME_MAG_QUALITY)
  private String magQuality;

  public static final String SERIALIZED_NAME_ORIGINID = "originid";
  @SerializedName(SERIALIZED_NAME_ORIGINID)
  private Long originid;

  public static final String SERIALIZED_NAME_PROVENANCE = "provenance";
  @SerializedName(SERIALIZED_NAME_PROVENANCE)
  private ObjectProvenaceForOriginsEventsAndEventsPref provenance;

  public ObjectMagnitudeForOriginsEventsAndEventsPref() { 
  }

  public ObjectMagnitudeForOriginsEventsAndEventsPref id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique incremental id | bigint(20)
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "14932631", value = "Unique incremental id | bigint(20)")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public ObjectMagnitudeForOriginsEventsAndEventsPref idLocalspace(Long idLocalspace) {
    
    this.idLocalspace = idLocalspace;
    return this;
  }

   /**
   * Localspace Id | bigint(19)
   * @return idLocalspace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "182491", value = "Localspace Id | bigint(19)")

  public Long getIdLocalspace() {
    return idLocalspace;
  }


  public void setIdLocalspace(Long idLocalspace) {
    this.idLocalspace = idLocalspace;
  }


  public ObjectMagnitudeForOriginsEventsAndEventsPref localspace(String localspace) {
    
    this.localspace = localspace;
    return this;
  }

   /**
   * Localspace name. i.e. hew1_mole, endeavour_mole | char(255)
   * @return localspace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "hew1_mole", value = "Localspace name. i.e. hew1_mole, endeavour_mole | char(255)")

  public String getLocalspace() {
    return localspace;
  }


  public void setLocalspace(String localspace) {
    this.localspace = localspace;
  }


  public ObjectMagnitudeForOriginsEventsAndEventsPref mag(Double mag) {
    
    this.mag = mag;
    return this;
  }

   /**
   * Magnitude value | double
   * @return mag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3.01", value = "Magnitude value | double")

  public Double getMag() {
    return mag;
  }


  public void setMag(Double mag) {
    this.mag = mag;
  }


  public ObjectMagnitudeForOriginsEventsAndEventsPref typeMagnitude(String typeMagnitude) {
    
    this.typeMagnitude = typeMagnitude;
    return this;
  }

   /**
   * Type of the magnitude | varchar(255)
   * @return typeMagnitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ML-VAX", value = "Type of the magnitude | varchar(255)")

  public String getTypeMagnitude() {
    return typeMagnitude;
  }


  public void setTypeMagnitude(String typeMagnitude) {
    this.typeMagnitude = typeMagnitude;
  }


  public ObjectMagnitudeForOriginsEventsAndEventsPref lowerUncertainty(Double lowerUncertainty) {
    
    this.lowerUncertainty = lowerUncertainty;
    return this;
  }

   /**
   * Magnitude lower_uncertainty | double
   * @return lowerUncertainty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.52", value = "Magnitude lower_uncertainty | double")

  public Double getLowerUncertainty() {
    return lowerUncertainty;
  }


  public void setLowerUncertainty(Double lowerUncertainty) {
    this.lowerUncertainty = lowerUncertainty;
  }


  public ObjectMagnitudeForOriginsEventsAndEventsPref upperUncertainty(Double upperUncertainty) {
    
    this.upperUncertainty = upperUncertainty;
    return this;
  }

   /**
   * Magnitude upper_uncertainty | double
   * @return upperUncertainty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.53", value = "Magnitude upper_uncertainty | double")

  public Double getUpperUncertainty() {
    return upperUncertainty;
  }


  public void setUpperUncertainty(Double upperUncertainty) {
    this.upperUncertainty = upperUncertainty;
  }


  public ObjectMagnitudeForOriginsEventsAndEventsPref quality(Double quality) {
    
    this.quality = quality;
    return this;
  }

   /**
   * quality | double
   * @return quality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "quality | double")

  public Double getQuality() {
    return quality;
  }


  public void setQuality(Double quality) {
    this.quality = quality;
  }


  public ObjectMagnitudeForOriginsEventsAndEventsPref magQuality(String magQuality) {
    
    this.magQuality = magQuality;
    return this;
  }

   /**
   * INGV quality code of the magnitude (computed by ew2moledb) | char(2)
   * @return magQuality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "BB", value = "INGV quality code of the magnitude (computed by ew2moledb) | char(2)")

  public String getMagQuality() {
    return magQuality;
  }


  public void setMagQuality(String magQuality) {
    this.magQuality = magQuality;
  }


  public ObjectMagnitudeForOriginsEventsAndEventsPref originid(Long originid) {
    
    this.originid = originid;
    return this;
  }

   /**
   * Unique incremental id | bigint(20)
   * @return originid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "14932631", value = "Unique incremental id | bigint(20)")

  public Long getOriginid() {
    return originid;
  }


  public void setOriginid(Long originid) {
    this.originid = originid;
  }


  public ObjectMagnitudeForOriginsEventsAndEventsPref provenance(ObjectProvenaceForOriginsEventsAndEventsPref provenance) {
    
    this.provenance = provenance;
    return this;
  }

   /**
   * Get provenance
   * @return provenance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ObjectProvenaceForOriginsEventsAndEventsPref getProvenance() {
    return provenance;
  }


  public void setProvenance(ObjectProvenaceForOriginsEventsAndEventsPref provenance) {
    this.provenance = provenance;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectMagnitudeForOriginsEventsAndEventsPref objectMagnitudeForOriginsEventsAndEventsPref = (ObjectMagnitudeForOriginsEventsAndEventsPref) o;
    return Objects.equals(this.id, objectMagnitudeForOriginsEventsAndEventsPref.id) &&
        Objects.equals(this.idLocalspace, objectMagnitudeForOriginsEventsAndEventsPref.idLocalspace) &&
        Objects.equals(this.localspace, objectMagnitudeForOriginsEventsAndEventsPref.localspace) &&
        Objects.equals(this.mag, objectMagnitudeForOriginsEventsAndEventsPref.mag) &&
        Objects.equals(this.typeMagnitude, objectMagnitudeForOriginsEventsAndEventsPref.typeMagnitude) &&
        Objects.equals(this.lowerUncertainty, objectMagnitudeForOriginsEventsAndEventsPref.lowerUncertainty) &&
        Objects.equals(this.upperUncertainty, objectMagnitudeForOriginsEventsAndEventsPref.upperUncertainty) &&
        Objects.equals(this.quality, objectMagnitudeForOriginsEventsAndEventsPref.quality) &&
        Objects.equals(this.magQuality, objectMagnitudeForOriginsEventsAndEventsPref.magQuality) &&
        Objects.equals(this.originid, objectMagnitudeForOriginsEventsAndEventsPref.originid) &&
        Objects.equals(this.provenance, objectMagnitudeForOriginsEventsAndEventsPref.provenance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, idLocalspace, localspace, mag, typeMagnitude, lowerUncertainty, upperUncertainty, quality, magQuality, originid, provenance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectMagnitudeForOriginsEventsAndEventsPref {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idLocalspace: ").append(toIndentedString(idLocalspace)).append("\n");
    sb.append("    localspace: ").append(toIndentedString(localspace)).append("\n");
    sb.append("    mag: ").append(toIndentedString(mag)).append("\n");
    sb.append("    typeMagnitude: ").append(toIndentedString(typeMagnitude)).append("\n");
    sb.append("    lowerUncertainty: ").append(toIndentedString(lowerUncertainty)).append("\n");
    sb.append("    upperUncertainty: ").append(toIndentedString(upperUncertainty)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    magQuality: ").append(toIndentedString(magQuality)).append("\n");
    sb.append("    originid: ").append(toIndentedString(originid)).append("\n");
    sb.append("    provenance: ").append(toIndentedString(provenance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("id_localspace");
    openapiFields.add("localspace");
    openapiFields.add("mag");
    openapiFields.add("type_magnitude");
    openapiFields.add("lower_uncertainty");
    openapiFields.add("upper_uncertainty");
    openapiFields.add("quality");
    openapiFields.add("mag_quality");
    openapiFields.add("originid");
    openapiFields.add("provenance");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ObjectMagnitudeForOriginsEventsAndEventsPref
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ObjectMagnitudeForOriginsEventsAndEventsPref.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ObjectMagnitudeForOriginsEventsAndEventsPref is not found in the empty JSON string", ObjectMagnitudeForOriginsEventsAndEventsPref.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ObjectMagnitudeForOriginsEventsAndEventsPref.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ObjectMagnitudeForOriginsEventsAndEventsPref` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("localspace") != null && !jsonObj.get("localspace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localspace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localspace").toString()));
      }
      if (jsonObj.get("type_magnitude") != null && !jsonObj.get("type_magnitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type_magnitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type_magnitude").toString()));
      }
      if (jsonObj.get("mag_quality") != null && !jsonObj.get("mag_quality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mag_quality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mag_quality").toString()));
      }
      // validate the optional field `provenance`
      if (jsonObj.getAsJsonObject("provenance") != null) {
        ObjectProvenaceForOriginsEventsAndEventsPref.validateJsonObject(jsonObj.getAsJsonObject("provenance"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ObjectMagnitudeForOriginsEventsAndEventsPref.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ObjectMagnitudeForOriginsEventsAndEventsPref' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ObjectMagnitudeForOriginsEventsAndEventsPref> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ObjectMagnitudeForOriginsEventsAndEventsPref.class));

       return (TypeAdapter<T>) new TypeAdapter<ObjectMagnitudeForOriginsEventsAndEventsPref>() {
           @Override
           public void write(JsonWriter out, ObjectMagnitudeForOriginsEventsAndEventsPref value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ObjectMagnitudeForOriginsEventsAndEventsPref read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ObjectMagnitudeForOriginsEventsAndEventsPref given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ObjectMagnitudeForOriginsEventsAndEventsPref
  * @throws IOException if the JSON string is invalid with respect to ObjectMagnitudeForOriginsEventsAndEventsPref
  */
  public static ObjectMagnitudeForOriginsEventsAndEventsPref fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ObjectMagnitudeForOriginsEventsAndEventsPref.class);
  }

 /**
  * Convert an instance of ObjectMagnitudeForOriginsEventsAndEventsPref to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

