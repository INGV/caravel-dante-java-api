/*
 * Dante Web Services
 *       # Introduction   Dante is an API Web Service used for iteract with earthquake data stored in database (**quakedb**); the **quakedb** database schema is used at INGV.   Use other schema would require cration of specific `Model` and `Controller` but this is the potential of web services.      Dante provides a set of routes to store message **event**, **origin**, **magnitude**, **arrival**, **...**.      # Input   As input, Dante acept:   - A `json` message (view '**store**' spec below)    - An Eartworm `json` message (view '**earthworm api**' spec below) produced by **ew2openapi** module      # Output   As output, Dante has a RESTful api foreach database table and implement three specific routes:    - `events-group`: returns the preferred origin and the preferred magnitude from all clusterd events.    - `events`: returns the preferred origin and the preferred magnitude from the same instance.    - `event`: returns the full event (event, origins, magnitudes, arrivals, amplitude, etc...) from an **eventid** or **originid**_/_**originid**.        
 *
 * The version of the OpenAPI document: 3.43.0
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.dante.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.ingv.dante.model.StrongmotioniiSchemaEwMessageRSAInner;
import org.ingv.dante.model.TypeOriginName;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.ingv.dante.JSON;

/**
 * StrongmotioniiSchemaEwMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class StrongmotioniiSchemaEwMessage {
  public static final String SERIALIZED_NAME_QUAKE_ID = "quakeId";
  @SerializedName(SERIALIZED_NAME_QUAKE_ID)
  @javax.annotation.Nullable
  private Long quakeId;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  @javax.annotation.Nonnull
  private TypeOriginName version = TypeOriginName.HYPOCENTER;

  public static final String SERIALIZED_NAME_NETWORK = "network";
  @SerializedName(SERIALIZED_NAME_NETWORK)
  @javax.annotation.Nullable
  private String network;

  public static final String SERIALIZED_NAME_STATION = "station";
  @SerializedName(SERIALIZED_NAME_STATION)
  @javax.annotation.Nullable
  private String station;

  public static final String SERIALIZED_NAME_COMPONENT = "component";
  @SerializedName(SERIALIZED_NAME_COMPONENT)
  @javax.annotation.Nullable
  private String component;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  @javax.annotation.Nullable
  private String location = "--";

  public static final String SERIALIZED_NAME_Q_AUTHOR = "qAuthor";
  @SerializedName(SERIALIZED_NAME_Q_AUTHOR)
  @javax.annotation.Nullable
  private String qAuthor;

  public static final String SERIALIZED_NAME_TIME = "time";
  @SerializedName(SERIALIZED_NAME_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime time;

  public static final String SERIALIZED_NAME_ALTERNATE_TIME = "alternateTime";
  @SerializedName(SERIALIZED_NAME_ALTERNATE_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime alternateTime;

  public static final String SERIALIZED_NAME_ALTERNATE_CODE = "alternateCode";
  @SerializedName(SERIALIZED_NAME_ALTERNATE_CODE)
  @javax.annotation.Nullable
  private Long alternateCode;

  public static final String SERIALIZED_NAME_PGA = "pga";
  @SerializedName(SERIALIZED_NAME_PGA)
  @javax.annotation.Nullable
  private Float pga;

  public static final String SERIALIZED_NAME_PGA_TIME = "pgaTime";
  @SerializedName(SERIALIZED_NAME_PGA_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime pgaTime;

  public static final String SERIALIZED_NAME_PGV = "pgv";
  @SerializedName(SERIALIZED_NAME_PGV)
  @javax.annotation.Nullable
  private Float pgv;

  public static final String SERIALIZED_NAME_PGV_TIME = "pgvTime";
  @SerializedName(SERIALIZED_NAME_PGV_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime pgvTime;

  public static final String SERIALIZED_NAME_PGD = "pgd";
  @SerializedName(SERIALIZED_NAME_PGD)
  @javax.annotation.Nullable
  private Float pgd;

  public static final String SERIALIZED_NAME_PGD_TIME = "pgdTime";
  @SerializedName(SERIALIZED_NAME_PGD_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime pgdTime;

  public static final String SERIALIZED_NAME_R_S_A = "RSA";
  @SerializedName(SERIALIZED_NAME_R_S_A)
  @javax.annotation.Nullable
  private List<StrongmotioniiSchemaEwMessageRSAInner> RSA = new ArrayList<>();

  public StrongmotioniiSchemaEwMessage() {
  }

  public StrongmotioniiSchemaEwMessage quakeId(@javax.annotation.Nullable Long quakeId) {
    this.quakeId = quakeId;
    return this;
  }

  /**
   * Localspace Id | bigint(19)
   * @return quakeId
   */
  @javax.annotation.Nullable
  public Long getQuakeId() {
    return quakeId;
  }

  public void setQuakeId(@javax.annotation.Nullable Long quakeId) {
    this.quakeId = quakeId;
  }


  public StrongmotioniiSchemaEwMessage version(@javax.annotation.Nonnull TypeOriginName version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nonnull
  public TypeOriginName getVersion() {
    return version;
  }

  public void setVersion(@javax.annotation.Nonnull TypeOriginName version) {
    this.version = version;
  }


  public StrongmotioniiSchemaEwMessage network(@javax.annotation.Nullable String network) {
    this.network = network;
    return this;
  }

  /**
   * Channel net code | char(2)
   * @return network
   */
  @javax.annotation.Nullable
  public String getNetwork() {
    return network;
  }

  public void setNetwork(@javax.annotation.Nullable String network) {
    this.network = network;
  }


  public StrongmotioniiSchemaEwMessage station(@javax.annotation.Nullable String station) {
    this.station = station;
    return this;
  }

  /**
   * Channel station code | varchar(5)
   * @return station
   */
  @javax.annotation.Nullable
  public String getStation() {
    return station;
  }

  public void setStation(@javax.annotation.Nullable String station) {
    this.station = station;
  }


  public StrongmotioniiSchemaEwMessage component(@javax.annotation.Nullable String component) {
    this.component = component;
    return this;
  }

  /**
   * Channel code | char(3)
   * @return component
   */
  @javax.annotation.Nullable
  public String getComponent() {
    return component;
  }

  public void setComponent(@javax.annotation.Nullable String component) {
    this.component = component;
  }


  public StrongmotioniiSchemaEwMessage location(@javax.annotation.Nullable String location) {
    this.location = location;
    return this;
  }

  /**
   * Channel location | char(2)
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(@javax.annotation.Nullable String location) {
    this.location = location;
  }


  public StrongmotioniiSchemaEwMessage qAuthor(@javax.annotation.Nullable String qAuthor) {
    this.qAuthor = qAuthor;
    return this;
  }

  /**
   * qAuthor description
   * @return qAuthor
   */
  @javax.annotation.Nullable
  public String getqAuthor() {
    return qAuthor;
  }

  public void setqAuthor(@javax.annotation.Nullable String qAuthor) {
    this.qAuthor = qAuthor;
  }


  public StrongmotioniiSchemaEwMessage time(@javax.annotation.Nullable OffsetDateTime time) {
    this.time = time;
    return this;
  }

  /**
   * time: trigger reported by SM box - datetime part | datetime(6)
   * @return time
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTime() {
    return time;
  }

  public void setTime(@javax.annotation.Nullable OffsetDateTime time) {
    this.time = time;
  }


  public StrongmotioniiSchemaEwMessage alternateTime(@javax.annotation.Nullable OffsetDateTime alternateTime) {
    this.alternateTime = alternateTime;
    return this;
  }

  /**
   * alternate time: trigger reported by SM box - time with microseconds | datetime(3)
   * @return alternateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getAlternateTime() {
    return alternateTime;
  }

  public void setAlternateTime(@javax.annotation.Nullable OffsetDateTime alternateTime) {
    this.alternateTime = alternateTime;
  }


  public StrongmotioniiSchemaEwMessage alternateCode(@javax.annotation.Nullable Long alternateCode) {
    this.alternateCode = alternateCode;
    return this;
  }

  /**
   * code specifying the source of the alternate time field | int(11)
   * @return alternateCode
   */
  @javax.annotation.Nullable
  public Long getAlternateCode() {
    return alternateCode;
  }

  public void setAlternateCode(@javax.annotation.Nullable Long alternateCode) {
    this.alternateCode = alternateCode;
  }


  public StrongmotioniiSchemaEwMessage pga(@javax.annotation.Nullable Float pga) {
    this.pga = pga;
    return this;
  }

  /**
   * REQUIRED: peak ground acceleration (cm/s/s) | double
   * @return pga
   */
  @javax.annotation.Nullable
  public Float getPga() {
    return pga;
  }

  public void setPga(@javax.annotation.Nullable Float pga) {
    this.pga = pga;
  }


  public StrongmotioniiSchemaEwMessage pgaTime(@javax.annotation.Nullable OffsetDateTime pgaTime) {
    this.pgaTime = pgaTime;
    return this;
  }

  /**
   * OPTIONAL: time of pga - datetime part | datetime(3)
   * @return pgaTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPgaTime() {
    return pgaTime;
  }

  public void setPgaTime(@javax.annotation.Nullable OffsetDateTime pgaTime) {
    this.pgaTime = pgaTime;
  }


  public StrongmotioniiSchemaEwMessage pgv(@javax.annotation.Nullable Float pgv) {
    this.pgv = pgv;
    return this;
  }

  /**
   * REQUIRED: peak ground velocity (cm/s) | double
   * @return pgv
   */
  @javax.annotation.Nullable
  public Float getPgv() {
    return pgv;
  }

  public void setPgv(@javax.annotation.Nullable Float pgv) {
    this.pgv = pgv;
  }


  public StrongmotioniiSchemaEwMessage pgvTime(@javax.annotation.Nullable OffsetDateTime pgvTime) {
    this.pgvTime = pgvTime;
    return this;
  }

  /**
   * OPTIONAL: time of pgv - datetime part | datetime(3)
   * @return pgvTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPgvTime() {
    return pgvTime;
  }

  public void setPgvTime(@javax.annotation.Nullable OffsetDateTime pgvTime) {
    this.pgvTime = pgvTime;
  }


  public StrongmotioniiSchemaEwMessage pgd(@javax.annotation.Nullable Float pgd) {
    this.pgd = pgd;
    return this;
  }

  /**
   * REQUIRED: peak ground displacement (cm) | double
   * @return pgd
   */
  @javax.annotation.Nullable
  public Float getPgd() {
    return pgd;
  }

  public void setPgd(@javax.annotation.Nullable Float pgd) {
    this.pgd = pgd;
  }


  public StrongmotioniiSchemaEwMessage pgdTime(@javax.annotation.Nullable OffsetDateTime pgdTime) {
    this.pgdTime = pgdTime;
    return this;
  }

  /**
   * OPTIONAL: time of pgd - datetime part | datetime(3)
   * @return pgdTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPgdTime() {
    return pgdTime;
  }

  public void setPgdTime(@javax.annotation.Nullable OffsetDateTime pgdTime) {
    this.pgdTime = pgdTime;
  }


  public StrongmotioniiSchemaEwMessage RSA(@javax.annotation.Nullable List<StrongmotioniiSchemaEwMessageRSAInner> RSA) {
    this.RSA = RSA;
    return this;
  }

  public StrongmotioniiSchemaEwMessage addRSAItem(StrongmotioniiSchemaEwMessageRSAInner RSAItem) {
    if (this.RSA == null) {
      this.RSA = new ArrayList<>();
    }
    this.RSA.add(RSAItem);
    return this;
  }

  /**
   * Get RSA
   * @return RSA
   */
  @javax.annotation.Nullable
  public List<StrongmotioniiSchemaEwMessageRSAInner> getRSA() {
    return RSA;
  }

  public void setRSA(@javax.annotation.Nullable List<StrongmotioniiSchemaEwMessageRSAInner> RSA) {
    this.RSA = RSA;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the StrongmotioniiSchemaEwMessage instance itself
   */
  public StrongmotioniiSchemaEwMessage putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StrongmotioniiSchemaEwMessage strongmotioniiSchemaEwMessage = (StrongmotioniiSchemaEwMessage) o;
    return Objects.equals(this.quakeId, strongmotioniiSchemaEwMessage.quakeId) &&
        Objects.equals(this.version, strongmotioniiSchemaEwMessage.version) &&
        Objects.equals(this.network, strongmotioniiSchemaEwMessage.network) &&
        Objects.equals(this.station, strongmotioniiSchemaEwMessage.station) &&
        Objects.equals(this.component, strongmotioniiSchemaEwMessage.component) &&
        Objects.equals(this.location, strongmotioniiSchemaEwMessage.location) &&
        Objects.equals(this.qAuthor, strongmotioniiSchemaEwMessage.qAuthor) &&
        Objects.equals(this.time, strongmotioniiSchemaEwMessage.time) &&
        Objects.equals(this.alternateTime, strongmotioniiSchemaEwMessage.alternateTime) &&
        Objects.equals(this.alternateCode, strongmotioniiSchemaEwMessage.alternateCode) &&
        Objects.equals(this.pga, strongmotioniiSchemaEwMessage.pga) &&
        Objects.equals(this.pgaTime, strongmotioniiSchemaEwMessage.pgaTime) &&
        Objects.equals(this.pgv, strongmotioniiSchemaEwMessage.pgv) &&
        Objects.equals(this.pgvTime, strongmotioniiSchemaEwMessage.pgvTime) &&
        Objects.equals(this.pgd, strongmotioniiSchemaEwMessage.pgd) &&
        Objects.equals(this.pgdTime, strongmotioniiSchemaEwMessage.pgdTime) &&
        Objects.equals(this.RSA, strongmotioniiSchemaEwMessage.RSA)&&
        Objects.equals(this.additionalProperties, strongmotioniiSchemaEwMessage.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(quakeId, version, network, station, component, location, qAuthor, time, alternateTime, alternateCode, pga, pgaTime, pgv, pgvTime, pgd, pgdTime, RSA, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StrongmotioniiSchemaEwMessage {\n");
    sb.append("    quakeId: ").append(toIndentedString(quakeId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    station: ").append(toIndentedString(station)).append("\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    qAuthor: ").append(toIndentedString(qAuthor)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    alternateTime: ").append(toIndentedString(alternateTime)).append("\n");
    sb.append("    alternateCode: ").append(toIndentedString(alternateCode)).append("\n");
    sb.append("    pga: ").append(toIndentedString(pga)).append("\n");
    sb.append("    pgaTime: ").append(toIndentedString(pgaTime)).append("\n");
    sb.append("    pgv: ").append(toIndentedString(pgv)).append("\n");
    sb.append("    pgvTime: ").append(toIndentedString(pgvTime)).append("\n");
    sb.append("    pgd: ").append(toIndentedString(pgd)).append("\n");
    sb.append("    pgdTime: ").append(toIndentedString(pgdTime)).append("\n");
    sb.append("    RSA: ").append(toIndentedString(RSA)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("quakeId");
    openapiFields.add("version");
    openapiFields.add("network");
    openapiFields.add("station");
    openapiFields.add("component");
    openapiFields.add("location");
    openapiFields.add("qAuthor");
    openapiFields.add("time");
    openapiFields.add("alternateTime");
    openapiFields.add("alternateCode");
    openapiFields.add("pga");
    openapiFields.add("pgaTime");
    openapiFields.add("pgv");
    openapiFields.add("pgvTime");
    openapiFields.add("pgd");
    openapiFields.add("pgdTime");
    openapiFields.add("RSA");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("quakeId");
    openapiRequiredFields.add("version");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StrongmotioniiSchemaEwMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StrongmotioniiSchemaEwMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StrongmotioniiSchemaEwMessage is not found in the empty JSON string", StrongmotioniiSchemaEwMessage.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StrongmotioniiSchemaEwMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `version`
      TypeOriginName.validateJsonElement(jsonObj.get("version"));
      if ((jsonObj.get("network") != null && !jsonObj.get("network").isJsonNull()) && !jsonObj.get("network").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `network` to be a primitive type in the JSON string but got `%s`", jsonObj.get("network").toString()));
      }
      if ((jsonObj.get("station") != null && !jsonObj.get("station").isJsonNull()) && !jsonObj.get("station").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `station` to be a primitive type in the JSON string but got `%s`", jsonObj.get("station").toString()));
      }
      if ((jsonObj.get("component") != null && !jsonObj.get("component").isJsonNull()) && !jsonObj.get("component").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `component` to be a primitive type in the JSON string but got `%s`", jsonObj.get("component").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("qAuthor") != null && !jsonObj.get("qAuthor").isJsonNull()) && !jsonObj.get("qAuthor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qAuthor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qAuthor").toString()));
      }
      if (jsonObj.get("RSA") != null && !jsonObj.get("RSA").isJsonNull()) {
        JsonArray jsonArrayRSA = jsonObj.getAsJsonArray("RSA");
        if (jsonArrayRSA != null) {
          // ensure the json data is an array
          if (!jsonObj.get("RSA").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `RSA` to be an array in the JSON string but got `%s`", jsonObj.get("RSA").toString()));
          }

          // validate the optional field `RSA` (array)
          for (int i = 0; i < jsonArrayRSA.size(); i++) {
            StrongmotioniiSchemaEwMessageRSAInner.validateJsonElement(jsonArrayRSA.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StrongmotioniiSchemaEwMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StrongmotioniiSchemaEwMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StrongmotioniiSchemaEwMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StrongmotioniiSchemaEwMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<StrongmotioniiSchemaEwMessage>() {
           @Override
           public void write(JsonWriter out, StrongmotioniiSchemaEwMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public StrongmotioniiSchemaEwMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             StrongmotioniiSchemaEwMessage instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StrongmotioniiSchemaEwMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StrongmotioniiSchemaEwMessage
   * @throws IOException if the JSON string is invalid with respect to StrongmotioniiSchemaEwMessage
   */
  public static StrongmotioniiSchemaEwMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StrongmotioniiSchemaEwMessage.class);
  }

  /**
   * Convert an instance of StrongmotioniiSchemaEwMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

