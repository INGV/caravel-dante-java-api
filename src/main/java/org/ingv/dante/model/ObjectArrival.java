/*
 * Dante Web Services
 *       # Introduction   Dante is an API Web Service used for iteract with earthquake data stored in database (**quakedb**); the **quakedb** database schema is used at INGV.   Use other schema would require cration of specific `Model` and `Controller` but this is the potential of web services.      Dante provides a set of routes to store message **event**, **origin**, **magnitude**, **arrival**, **...**.      # Input   As input, Dante acept:   - A `json` message (view '**store**' spec below)    - An Eartworm `json` message (view '**earthworm api**' spec below) produced by **ew2openapi** module      # Output   As output, Dante has a RESTful api foreach database table and implement three specific routes:    - `events-pref`: returns the preferred origin and the preferred magnitude from all clusterd events.    - `events`: returns the preferred origin and the preferred magnitude from the same instance.    - `event`: returns the full event (event, origins, magnitudes, arrivals, amplitude, etc...) from an **eventid** or **originid**_/_**originid**.        
 *
 * The version of the OpenAPI document: 2.44.0
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.dante.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.ingv.dante.model.ObjectLocalspace;
import org.ingv.dante.model.ObjectPickEw;
import org.ingv.dante.model.ObjectProvenance;
import org.ingv.dante.model.PickEmersio;
import org.ingv.dante.model.PickFirstmotion;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.ingv.dante.JSON;

/**
 * ObjectArrival
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-23T09:42:46.762942Z[Etc/UTC]")
public class ObjectArrival {
  public static final String SERIALIZED_NAME_NET = "net";
  @SerializedName(SERIALIZED_NAME_NET)
  private String net;

  public static final String SERIALIZED_NAME_STA = "sta";
  @SerializedName(SERIALIZED_NAME_STA)
  private String sta;

  public static final String SERIALIZED_NAME_CHA = "cha";
  @SerializedName(SERIALIZED_NAME_CHA)
  private String cha;

  public static final String SERIALIZED_NAME_LOC = "loc";
  @SerializedName(SERIALIZED_NAME_LOC)
  private String loc = "--";

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_MODIFIED = "modified";
  @SerializedName(SERIALIZED_NAME_MODIFIED)
  private OffsetDateTime modified;

  public static final String SERIALIZED_NAME_INSERTED = "inserted";
  @SerializedName(SERIALIZED_NAME_INSERTED)
  private OffsetDateTime inserted;

  public static final String SERIALIZED_NAME_ID_LOCALSPACE = "id_localspace";
  @SerializedName(SERIALIZED_NAME_ID_LOCALSPACE)
  private Long idLocalspace;

  public static final String SERIALIZED_NAME_ISC_CODE = "isc_code";
  @SerializedName(SERIALIZED_NAME_ISC_CODE)
  private String iscCode;

  public static final String SERIALIZED_NAME_QUALITY_CLASS = "quality_class";
  @SerializedName(SERIALIZED_NAME_QUALITY_CLASS)
  private Integer qualityClass;

  public static final String SERIALIZED_NAME_LOWER_UNCERTAINTY = "lower_uncertainty";
  @SerializedName(SERIALIZED_NAME_LOWER_UNCERTAINTY)
  private Float lowerUncertainty;

  public static final String SERIALIZED_NAME_UPPER_UNCERTAINTY = "upper_uncertainty";
  @SerializedName(SERIALIZED_NAME_UPPER_UNCERTAINTY)
  private Float upperUncertainty;

  public static final String SERIALIZED_NAME_CONFIDENCE_LEVEL = "confidence_level";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE_LEVEL)
  private Float confidenceLevel = 68.3f;

  public static final String SERIALIZED_NAME_ARRIVAL_TIME = "arrival_time";
  @SerializedName(SERIALIZED_NAME_ARRIVAL_TIME)
  private OffsetDateTime arrivalTime;

  public static final String SERIALIZED_NAME_FIRSTMOTION = "firstmotion";
  @SerializedName(SERIALIZED_NAME_FIRSTMOTION)
  private PickFirstmotion firstmotion;

  public static final String SERIALIZED_NAME_EMERSIO = "emersio";
  @SerializedName(SERIALIZED_NAME_EMERSIO)
  private PickEmersio emersio;

  public static final String SERIALIZED_NAME_EP_DISTANCE_KM = "ep_distance_km";
  @SerializedName(SERIALIZED_NAME_EP_DISTANCE_KM)
  private Float epDistanceKm;

  public static final String SERIALIZED_NAME_EP_DISTANCE_DELTA = "ep_distance_delta";
  @SerializedName(SERIALIZED_NAME_EP_DISTANCE_DELTA)
  private Float epDistanceDelta;

  public static final String SERIALIZED_NAME_ORIG_DISTANCE = "orig_distance";
  @SerializedName(SERIALIZED_NAME_ORIG_DISTANCE)
  private Double origDistance;

  public static final String SERIALIZED_NAME_AZIMUT = "azimut";
  @SerializedName(SERIALIZED_NAME_AZIMUT)
  private Float azimut;

  public static final String SERIALIZED_NAME_TAKE_OFF = "take_off";
  @SerializedName(SERIALIZED_NAME_TAKE_OFF)
  private Float takeOff;

  public static final String SERIALIZED_NAME_POLARITY_IS_USED = "polarity_is_used";
  @SerializedName(SERIALIZED_NAME_POLARITY_IS_USED)
  private Boolean polarityIsUsed;

  public static final String SERIALIZED_NAME_ARR_TIME_IS_USED = "arr_time_is_used";
  @SerializedName(SERIALIZED_NAME_ARR_TIME_IS_USED)
  private Boolean arrTimeIsUsed;

  public static final String SERIALIZED_NAME_RESIDUAL = "residual";
  @SerializedName(SERIALIZED_NAME_RESIDUAL)
  private Double residual;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private Double weight;

  public static final String SERIALIZED_NAME_LOCALSPACE = "localspace";
  @SerializedName(SERIALIZED_NAME_LOCALSPACE)
  private ObjectLocalspace localspace;

  public static final String SERIALIZED_NAME_PROVENANCE = "provenance";
  @SerializedName(SERIALIZED_NAME_PROVENANCE)
  private ObjectProvenance provenance;

  public static final String SERIALIZED_NAME_PICK_EW = "pick_ew";
  @SerializedName(SERIALIZED_NAME_PICK_EW)
  private ObjectPickEw pickEw;

  public ObjectArrival() { 
  }

  
  public ObjectArrival(
     Long id, 
     OffsetDateTime modified, 
     OffsetDateTime inserted
  ) {
    this();
    this.id = id;
    this.modified = modified;
    this.inserted = inserted;
  }

  public ObjectArrival net(String net) {
    
    this.net = net;
    return this;
  }

   /**
   * Channel net code | char(2)
   * @return net
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "IV", required = true, value = "Channel net code | char(2)")

  public String getNet() {
    return net;
  }


  public void setNet(String net) {
    this.net = net;
  }


  public ObjectArrival sta(String sta) {
    
    this.sta = sta;
    return this;
  }

   /**
   * Channel station code | varchar(5)
   * @return sta
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "ACER", required = true, value = "Channel station code | varchar(5)")

  public String getSta() {
    return sta;
  }


  public void setSta(String sta) {
    this.sta = sta;
  }


  public ObjectArrival cha(String cha) {
    
    this.cha = cha;
    return this;
  }

   /**
   * Channel code | char(3)
   * @return cha
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "HHZ", required = true, value = "Channel code | char(3)")

  public String getCha() {
    return cha;
  }


  public void setCha(String cha) {
    this.cha = cha;
  }


  public ObjectArrival loc(String loc) {
    
    this.loc = loc;
    return this;
  }

   /**
   * Channel location | char(2)
   * @return loc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00", value = "Channel location | char(2)")

  public String getLoc() {
    return loc;
  }


  public void setLoc(String loc) {
    this.loc = loc;
  }


   /**
   * Unique incremental id | bigint(20)
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "14932631", value = "Unique incremental id | bigint(20)")

  public Long getId() {
    return id;
  }




   /**
   * Last Review | timestamp
   * @return modified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-06-22T16:52:06.260Z", value = "Last Review | timestamp")

  public OffsetDateTime getModified() {
    return modified;
  }




   /**
   * Insert time | timestamp
   * @return inserted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-06-22T16:52:06.260Z", value = "Insert time | timestamp")

  public OffsetDateTime getInserted() {
    return inserted;
  }




  public ObjectArrival idLocalspace(Long idLocalspace) {
    
    this.idLocalspace = idLocalspace;
    return this;
  }

   /**
   * Localspace Id | bigint(19)
   * @return idLocalspace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "182491", value = "Localspace Id | bigint(19)")

  public Long getIdLocalspace() {
    return idLocalspace;
  }


  public void setIdLocalspace(Long idLocalspace) {
    this.idLocalspace = idLocalspace;
  }


  public ObjectArrival iscCode(String iscCode) {
    
    this.iscCode = iscCode;
    return this;
  }

   /**
   * ISC arrival code | varchar(8)
   * @return iscCode
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "S", required = true, value = "ISC arrival code | varchar(8)")

  public String getIscCode() {
    return iscCode;
  }


  public void setIscCode(String iscCode) {
    this.iscCode = iscCode;
  }


  public ObjectArrival qualityClass(Integer qualityClass) {
    
    this.qualityClass = qualityClass;
    return this;
  }

   /**
   * Pick quality class | bigint
   * @return qualityClass
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "Pick quality class | bigint")

  public Integer getQualityClass() {
    return qualityClass;
  }


  public void setQualityClass(Integer qualityClass) {
    this.qualityClass = qualityClass;
  }


  public ObjectArrival lowerUncertainty(Float lowerUncertainty) {
    
    this.lowerUncertainty = lowerUncertainty;
    return this;
  }

   /**
   * Uncertainty as the absolute value of deviation from the mainvalue towards smaller values. | decimal(8,3)
   * @return lowerUncertainty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.52", value = "Uncertainty as the absolute value of deviation from the mainvalue towards smaller values. | decimal(8,3)")

  public Float getLowerUncertainty() {
    return lowerUncertainty;
  }


  public void setLowerUncertainty(Float lowerUncertainty) {
    this.lowerUncertainty = lowerUncertainty;
  }


  public ObjectArrival upperUncertainty(Float upperUncertainty) {
    
    this.upperUncertainty = upperUncertainty;
    return this;
  }

   /**
   * Uncertainty as the absolute value of deviation from the mainvalue towards larger values. | decimal(8,3)
   * @return upperUncertainty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.53", value = "Uncertainty as the absolute value of deviation from the mainvalue towards larger values. | decimal(8,3)")

  public Float getUpperUncertainty() {
    return upperUncertainty;
  }


  public void setUpperUncertainty(Float upperUncertainty) {
    this.upperUncertainty = upperUncertainty;
  }


  public ObjectArrival confidenceLevel(Float confidenceLevel) {
    
    this.confidenceLevel = confidenceLevel;
    return this;
  }

   /**
   * Integer numer for confidence level type (68.3 1 sigma, xx &#x3D;2 sigma, 99% 3 sigma) | decimal(5.2)
   * @return confidenceLevel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "68.3", value = "Integer numer for confidence level type (68.3 1 sigma, xx =2 sigma, 99% 3 sigma) | decimal(5.2)")

  public Float getConfidenceLevel() {
    return confidenceLevel;
  }


  public void setConfidenceLevel(Float confidenceLevel) {
    this.confidenceLevel = confidenceLevel;
  }


  public ObjectArrival arrivalTime(OffsetDateTime arrivalTime) {
    
    this.arrivalTime = arrivalTime;
    return this;
  }

   /**
   * Arrival time with microseconds | datetime(3)
   * @return arrivalTime
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "2017-04-12T08:46:30.930Z", required = true, value = "Arrival time with microseconds | datetime(3)")

  public OffsetDateTime getArrivalTime() {
    return arrivalTime;
  }


  public void setArrivalTime(OffsetDateTime arrivalTime) {
    this.arrivalTime = arrivalTime;
  }


  public ObjectArrival firstmotion(PickFirstmotion firstmotion) {
    
    this.firstmotion = firstmotion;
    return this;
  }

   /**
   * Get firstmotion
   * @return firstmotion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PickFirstmotion getFirstmotion() {
    return firstmotion;
  }


  public void setFirstmotion(PickFirstmotion firstmotion) {
    this.firstmotion = firstmotion;
  }


  public ObjectArrival emersio(PickEmersio emersio) {
    
    this.emersio = emersio;
    return this;
  }

   /**
   * Get emersio
   * @return emersio
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PickEmersio getEmersio() {
    return emersio;
  }


  public void setEmersio(PickEmersio emersio) {
    this.emersio = emersio;
  }


  public ObjectArrival epDistanceKm(Float epDistanceKm) {
    
    this.epDistanceKm = epDistanceKm;
    return this;
  }

   /**
   * Distance from epicenter of the station expressed in Km | double
   * @return epDistanceKm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "223.3", value = "Distance from epicenter of the station expressed in Km | double")

  public Float getEpDistanceKm() {
    return epDistanceKm;
  }


  public void setEpDistanceKm(Float epDistanceKm) {
    this.epDistanceKm = epDistanceKm;
  }


  public ObjectArrival epDistanceDelta(Float epDistanceDelta) {
    
    this.epDistanceDelta = epDistanceDelta;
    return this;
  }

   /**
   * Distance from epicenter of the station expressed in Degrees | double
   * @return epDistanceDelta
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2", value = "Distance from epicenter of the station expressed in Degrees | double")

  public Float getEpDistanceDelta() {
    return epDistanceDelta;
  }


  public void setEpDistanceDelta(Float epDistanceDelta) {
    this.epDistanceDelta = epDistanceDelta;
  }


  public ObjectArrival origDistance(Double origDistance) {
    
    this.origDistance = origDistance;
    return this;
  }

   /**
   * Distance from origin of the station | double
   * @return origDistance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "161", value = "Distance from origin of the station | double")

  public Double getOrigDistance() {
    return origDistance;
  }


  public void setOrigDistance(Double origDistance) {
    this.origDistance = origDistance;
  }


  public ObjectArrival azimut(Float azimut) {
    
    this.azimut = azimut;
    return this;
  }

   /**
   * Station origin azimut | double
   * @return azimut
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "161", value = "Station origin azimut | double")

  public Float getAzimut() {
    return azimut;
  }


  public void setAzimut(Float azimut) {
    this.azimut = azimut;
  }


  public ObjectArrival takeOff(Float takeOff) {
    
    this.takeOff = takeOff;
    return this;
  }

   /**
   * Take off angle | double
   * @return takeOff
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "94", value = "Take off angle | double")

  public Float getTakeOff() {
    return takeOff;
  }


  public void setTakeOff(Float takeOff) {
    this.takeOff = takeOff;
  }


  public ObjectArrival polarityIsUsed(Boolean polarityIsUsed) {
    
    this.polarityIsUsed = polarityIsUsed;
    return this;
  }

   /**
   * 1 if it is used for polarity calculation | boolean
   * @return polarityIsUsed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "1 if it is used for polarity calculation | boolean")

  public Boolean getPolarityIsUsed() {
    return polarityIsUsed;
  }


  public void setPolarityIsUsed(Boolean polarityIsUsed) {
    this.polarityIsUsed = polarityIsUsed;
  }


  public ObjectArrival arrTimeIsUsed(Boolean arrTimeIsUsed) {
    
    this.arrTimeIsUsed = arrTimeIsUsed;
    return this;
  }

   /**
   * 1 if it is used for origin calculation | boolean
   * @return arrTimeIsUsed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "1 if it is used for origin calculation | boolean")

  public Boolean getArrTimeIsUsed() {
    return arrTimeIsUsed;
  }


  public void setArrTimeIsUsed(Boolean arrTimeIsUsed) {
    this.arrTimeIsUsed = arrTimeIsUsed;
  }


  public ObjectArrival residual(Double residual) {
    
    this.residual = residual;
    return this;
  }

   /**
   * Residual | double
   * @return residual
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "6.19", value = "Residual | double")

  public Double getResidual() {
    return residual;
  }


  public void setResidual(Double residual) {
    this.residual = residual;
  }


  public ObjectArrival weight(Double weight) {
    
    this.weight = weight;
    return this;
  }

   /**
   * Weight | double
   * @return weight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.88", value = "Weight | double")

  public Double getWeight() {
    return weight;
  }


  public void setWeight(Double weight) {
    this.weight = weight;
  }


  public ObjectArrival localspace(ObjectLocalspace localspace) {
    
    this.localspace = localspace;
    return this;
  }

   /**
   * Get localspace
   * @return localspace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ObjectLocalspace getLocalspace() {
    return localspace;
  }


  public void setLocalspace(ObjectLocalspace localspace) {
    this.localspace = localspace;
  }


  public ObjectArrival provenance(ObjectProvenance provenance) {
    
    this.provenance = provenance;
    return this;
  }

   /**
   * Get provenance
   * @return provenance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ObjectProvenance getProvenance() {
    return provenance;
  }


  public void setProvenance(ObjectProvenance provenance) {
    this.provenance = provenance;
  }


  public ObjectArrival pickEw(ObjectPickEw pickEw) {
    
    this.pickEw = pickEw;
    return this;
  }

   /**
   * Get pickEw
   * @return pickEw
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ObjectPickEw getPickEw() {
    return pickEw;
  }


  public void setPickEw(ObjectPickEw pickEw) {
    this.pickEw = pickEw;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectArrival objectArrival = (ObjectArrival) o;
    return Objects.equals(this.net, objectArrival.net) &&
        Objects.equals(this.sta, objectArrival.sta) &&
        Objects.equals(this.cha, objectArrival.cha) &&
        Objects.equals(this.loc, objectArrival.loc) &&
        Objects.equals(this.id, objectArrival.id) &&
        Objects.equals(this.modified, objectArrival.modified) &&
        Objects.equals(this.inserted, objectArrival.inserted) &&
        Objects.equals(this.idLocalspace, objectArrival.idLocalspace) &&
        Objects.equals(this.iscCode, objectArrival.iscCode) &&
        Objects.equals(this.qualityClass, objectArrival.qualityClass) &&
        Objects.equals(this.lowerUncertainty, objectArrival.lowerUncertainty) &&
        Objects.equals(this.upperUncertainty, objectArrival.upperUncertainty) &&
        Objects.equals(this.confidenceLevel, objectArrival.confidenceLevel) &&
        Objects.equals(this.arrivalTime, objectArrival.arrivalTime) &&
        Objects.equals(this.firstmotion, objectArrival.firstmotion) &&
        Objects.equals(this.emersio, objectArrival.emersio) &&
        Objects.equals(this.epDistanceKm, objectArrival.epDistanceKm) &&
        Objects.equals(this.epDistanceDelta, objectArrival.epDistanceDelta) &&
        Objects.equals(this.origDistance, objectArrival.origDistance) &&
        Objects.equals(this.azimut, objectArrival.azimut) &&
        Objects.equals(this.takeOff, objectArrival.takeOff) &&
        Objects.equals(this.polarityIsUsed, objectArrival.polarityIsUsed) &&
        Objects.equals(this.arrTimeIsUsed, objectArrival.arrTimeIsUsed) &&
        Objects.equals(this.residual, objectArrival.residual) &&
        Objects.equals(this.weight, objectArrival.weight) &&
        Objects.equals(this.localspace, objectArrival.localspace) &&
        Objects.equals(this.provenance, objectArrival.provenance) &&
        Objects.equals(this.pickEw, objectArrival.pickEw);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(net, sta, cha, loc, id, modified, inserted, idLocalspace, iscCode, qualityClass, lowerUncertainty, upperUncertainty, confidenceLevel, arrivalTime, firstmotion, emersio, epDistanceKm, epDistanceDelta, origDistance, azimut, takeOff, polarityIsUsed, arrTimeIsUsed, residual, weight, localspace, provenance, pickEw);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectArrival {\n");
    sb.append("    net: ").append(toIndentedString(net)).append("\n");
    sb.append("    sta: ").append(toIndentedString(sta)).append("\n");
    sb.append("    cha: ").append(toIndentedString(cha)).append("\n");
    sb.append("    loc: ").append(toIndentedString(loc)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    inserted: ").append(toIndentedString(inserted)).append("\n");
    sb.append("    idLocalspace: ").append(toIndentedString(idLocalspace)).append("\n");
    sb.append("    iscCode: ").append(toIndentedString(iscCode)).append("\n");
    sb.append("    qualityClass: ").append(toIndentedString(qualityClass)).append("\n");
    sb.append("    lowerUncertainty: ").append(toIndentedString(lowerUncertainty)).append("\n");
    sb.append("    upperUncertainty: ").append(toIndentedString(upperUncertainty)).append("\n");
    sb.append("    confidenceLevel: ").append(toIndentedString(confidenceLevel)).append("\n");
    sb.append("    arrivalTime: ").append(toIndentedString(arrivalTime)).append("\n");
    sb.append("    firstmotion: ").append(toIndentedString(firstmotion)).append("\n");
    sb.append("    emersio: ").append(toIndentedString(emersio)).append("\n");
    sb.append("    epDistanceKm: ").append(toIndentedString(epDistanceKm)).append("\n");
    sb.append("    epDistanceDelta: ").append(toIndentedString(epDistanceDelta)).append("\n");
    sb.append("    origDistance: ").append(toIndentedString(origDistance)).append("\n");
    sb.append("    azimut: ").append(toIndentedString(azimut)).append("\n");
    sb.append("    takeOff: ").append(toIndentedString(takeOff)).append("\n");
    sb.append("    polarityIsUsed: ").append(toIndentedString(polarityIsUsed)).append("\n");
    sb.append("    arrTimeIsUsed: ").append(toIndentedString(arrTimeIsUsed)).append("\n");
    sb.append("    residual: ").append(toIndentedString(residual)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    localspace: ").append(toIndentedString(localspace)).append("\n");
    sb.append("    provenance: ").append(toIndentedString(provenance)).append("\n");
    sb.append("    pickEw: ").append(toIndentedString(pickEw)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("net");
    openapiFields.add("sta");
    openapiFields.add("cha");
    openapiFields.add("loc");
    openapiFields.add("id");
    openapiFields.add("modified");
    openapiFields.add("inserted");
    openapiFields.add("id_localspace");
    openapiFields.add("isc_code");
    openapiFields.add("quality_class");
    openapiFields.add("lower_uncertainty");
    openapiFields.add("upper_uncertainty");
    openapiFields.add("confidence_level");
    openapiFields.add("arrival_time");
    openapiFields.add("firstmotion");
    openapiFields.add("emersio");
    openapiFields.add("ep_distance_km");
    openapiFields.add("ep_distance_delta");
    openapiFields.add("orig_distance");
    openapiFields.add("azimut");
    openapiFields.add("take_off");
    openapiFields.add("polarity_is_used");
    openapiFields.add("arr_time_is_used");
    openapiFields.add("residual");
    openapiFields.add("weight");
    openapiFields.add("localspace");
    openapiFields.add("provenance");
    openapiFields.add("pick_ew");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("net");
    openapiRequiredFields.add("sta");
    openapiRequiredFields.add("cha");
    openapiRequiredFields.add("isc_code");
    openapiRequiredFields.add("arrival_time");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ObjectArrival
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ObjectArrival.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ObjectArrival is not found in the empty JSON string", ObjectArrival.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ObjectArrival.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ObjectArrival` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ObjectArrival.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("net") != null && !jsonObj.get("net").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `net` to be a primitive type in the JSON string but got `%s`", jsonObj.get("net").toString()));
      }
      if (jsonObj.get("sta") != null && !jsonObj.get("sta").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sta` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sta").toString()));
      }
      if (jsonObj.get("cha") != null && !jsonObj.get("cha").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cha` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cha").toString()));
      }
      if (jsonObj.get("loc") != null && !jsonObj.get("loc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loc").toString()));
      }
      if (jsonObj.get("isc_code") != null && !jsonObj.get("isc_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isc_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isc_code").toString()));
      }
      // validate the optional field `localspace`
      if (jsonObj.getAsJsonObject("localspace") != null) {
        ObjectLocalspace.validateJsonObject(jsonObj.getAsJsonObject("localspace"));
      }
      // validate the optional field `provenance`
      if (jsonObj.getAsJsonObject("provenance") != null) {
        ObjectProvenance.validateJsonObject(jsonObj.getAsJsonObject("provenance"));
      }
      // validate the optional field `pick_ew`
      if (jsonObj.getAsJsonObject("pick_ew") != null) {
        ObjectPickEw.validateJsonObject(jsonObj.getAsJsonObject("pick_ew"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ObjectArrival.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ObjectArrival' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ObjectArrival> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ObjectArrival.class));

       return (TypeAdapter<T>) new TypeAdapter<ObjectArrival>() {
           @Override
           public void write(JsonWriter out, ObjectArrival value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ObjectArrival read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ObjectArrival given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ObjectArrival
  * @throws IOException if the JSON string is invalid with respect to ObjectArrival
  */
  public static ObjectArrival fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ObjectArrival.class);
  }

 /**
  * Convert an instance of ObjectArrival to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

