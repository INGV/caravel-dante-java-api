/*
 * Dante Web Services
 *       # Introduction   Dante is an API Web Service used for iteract with earthquake data stored in database (**quakedb**); the **quakedb** database schema is used at INGV.   Use other schema would require cration of specific `Model` and `Controller` but this is the potential of web services.      Dante provides a set of routes to store message **event**, **origin**, **magnitude**, **arrival**, **...**.      # Input   As input, Dante acept:   - A `json` message (view '**store**' spec below)    - An Eartworm `json` message (view '**earthworm api**' spec below) produced by **ew2openapi** module      # Output   As output, Dante has a RESTful api foreach database table and implement three specific routes:    - `events-group`: returns the preferred origin and the preferred magnitude from all clusterd events.    - `events`: returns the preferred origin and the preferred magnitude from the same instance.    - `event`: returns the full event (event, origins, magnitudes, arrivals, amplitude, etc...) from an **eventid** or **originid**_/_**originid**.        
 *
 * The version of the OpenAPI document: 3.28.0
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.dante.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.ingv.dante.model.Hyp2000arcPhasesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.ingv.dante.JSON;

/**
 * Hyp2000arcSchemaEwMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-17T10:18:34.078355344Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class Hyp2000arcSchemaEwMessage {
  public static final String SERIALIZED_NAME_QUAKE_ID = "quakeId";
  @SerializedName(SERIALIZED_NAME_QUAKE_ID)
  @javax.annotation.Nullable
  private Long quakeId;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  @javax.annotation.Nonnull
  private String version;

  public static final String SERIALIZED_NAME_ORIGIN_ID = "originId";
  @SerializedName(SERIALIZED_NAME_ORIGIN_ID)
  @javax.annotation.Nullable
  private Long originId;

  public static final String SERIALIZED_NAME_ORIGIN_TIME = "originTime";
  @SerializedName(SERIALIZED_NAME_ORIGIN_TIME)
  @javax.annotation.Nonnull
  private OffsetDateTime originTime;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  @javax.annotation.Nonnull
  private Double latitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  @javax.annotation.Nonnull
  private Double longitude;

  public static final String SERIALIZED_NAME_DEPTH = "depth";
  @SerializedName(SERIALIZED_NAME_DEPTH)
  @javax.annotation.Nonnull
  private Double depth;

  public static final String SERIALIZED_NAME_NPH = "nph";
  @SerializedName(SERIALIZED_NAME_NPH)
  @javax.annotation.Nullable
  private Long nph;

  public static final String SERIALIZED_NAME_NPH_S = "nphS";
  @SerializedName(SERIALIZED_NAME_NPH_S)
  @javax.annotation.Nullable
  private Long nphS;

  public static final String SERIALIZED_NAME_NPHTOT = "nphtot";
  @SerializedName(SERIALIZED_NAME_NPHTOT)
  @javax.annotation.Nullable
  private Long nphtot;

  public static final String SERIALIZED_NAME_N_PFM = "nPfm";
  @SerializedName(SERIALIZED_NAME_N_PFM)
  @javax.annotation.Nullable
  private Long nPfm;

  public static final String SERIALIZED_NAME_GAP = "gap";
  @SerializedName(SERIALIZED_NAME_GAP)
  @javax.annotation.Nullable
  private Float gap;

  public static final String SERIALIZED_NAME_DMIN = "dmin";
  @SerializedName(SERIALIZED_NAME_DMIN)
  @javax.annotation.Nullable
  private Double dmin;

  public static final String SERIALIZED_NAME_RMS = "rms";
  @SerializedName(SERIALIZED_NAME_RMS)
  @javax.annotation.Nullable
  private Double rms;

  public static final String SERIALIZED_NAME_E0AZ = "e0az";
  @SerializedName(SERIALIZED_NAME_E0AZ)
  @javax.annotation.Nullable
  private Float e0az;

  public static final String SERIALIZED_NAME_E0DP = "e0dp";
  @SerializedName(SERIALIZED_NAME_E0DP)
  @javax.annotation.Nullable
  private Double e0dp;

  public static final String SERIALIZED_NAME_E0 = "e0";
  @SerializedName(SERIALIZED_NAME_E0)
  @javax.annotation.Nullable
  private Double e0;

  public static final String SERIALIZED_NAME_E1AZ = "e1az";
  @SerializedName(SERIALIZED_NAME_E1AZ)
  @javax.annotation.Nullable
  private Float e1az;

  public static final String SERIALIZED_NAME_E1DP = "e1dp";
  @SerializedName(SERIALIZED_NAME_E1DP)
  @javax.annotation.Nullable
  private Double e1dp;

  public static final String SERIALIZED_NAME_E1 = "e1";
  @SerializedName(SERIALIZED_NAME_E1)
  @javax.annotation.Nullable
  private Double e1;

  public static final String SERIALIZED_NAME_E2 = "e2";
  @SerializedName(SERIALIZED_NAME_E2)
  @javax.annotation.Nullable
  private Double e2;

  public static final String SERIALIZED_NAME_ERH = "erh";
  @SerializedName(SERIALIZED_NAME_ERH)
  @javax.annotation.Nullable
  private Double erh;

  public static final String SERIALIZED_NAME_ERZ = "erz";
  @SerializedName(SERIALIZED_NAME_ERZ)
  @javax.annotation.Nullable
  private Double erz;

  public static final String SERIALIZED_NAME_MD = "Md";
  @SerializedName(SERIALIZED_NAME_MD)
  @javax.annotation.Nullable
  private Double md;

  public static final String SERIALIZED_NAME_REG = "reg";
  @SerializedName(SERIALIZED_NAME_REG)
  @javax.annotation.Nullable
  private String reg;

  public static final String SERIALIZED_NAME_LABELPREF = "labelpref";
  @SerializedName(SERIALIZED_NAME_LABELPREF)
  @javax.annotation.Nullable
  private String labelpref;

  public static final String SERIALIZED_NAME_MPREF = "Mpref";
  @SerializedName(SERIALIZED_NAME_MPREF)
  @javax.annotation.Nullable
  private Double mpref;

  public static final String SERIALIZED_NAME_WTPREF = "wtpref";
  @SerializedName(SERIALIZED_NAME_WTPREF)
  @javax.annotation.Nullable
  private Double wtpref;

  public static final String SERIALIZED_NAME_MDTYPE = "mdtype";
  @SerializedName(SERIALIZED_NAME_MDTYPE)
  @javax.annotation.Nullable
  private String mdtype;

  public static final String SERIALIZED_NAME_MDMAD = "mdmad";
  @SerializedName(SERIALIZED_NAME_MDMAD)
  @javax.annotation.Nullable
  private Double mdmad;

  public static final String SERIALIZED_NAME_MDWT = "mdwt";
  @SerializedName(SERIALIZED_NAME_MDWT)
  @javax.annotation.Nullable
  private Double mdwt;

  public static final String SERIALIZED_NAME_INGV_QUALITY = "ingvQuality";
  @SerializedName(SERIALIZED_NAME_INGV_QUALITY)
  @javax.annotation.Nullable
  private String ingvQuality;

  public static final String SERIALIZED_NAME_AMPLITUDE_MAGNITUDE = "amplitudeMagnitude";
  @SerializedName(SERIALIZED_NAME_AMPLITUDE_MAGNITUDE)
  @javax.annotation.Nullable
  private Double amplitudeMagnitude;

  public static final String SERIALIZED_NAME_NUMBER_OF_AMP_MAG_WEIGHT_CODE = "numberOfAmpMagWeightCode";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_AMP_MAG_WEIGHT_CODE)
  @javax.annotation.Nullable
  private Double numberOfAmpMagWeightCode;

  public static final String SERIALIZED_NAME_MEDIAN_ABS_DIFF_AMP_MAG = "medianAbsDiffAmpMag";
  @SerializedName(SERIALIZED_NAME_MEDIAN_ABS_DIFF_AMP_MAG)
  @javax.annotation.Nullable
  private Double medianAbsDiffAmpMag;

  public static final String SERIALIZED_NAME_PREFERRED_MAG_LABEL = "preferredMagLabel";
  @SerializedName(SERIALIZED_NAME_PREFERRED_MAG_LABEL)
  @javax.annotation.Nullable
  private String preferredMagLabel;

  public static final String SERIALIZED_NAME_PREFERRED_MAG = "preferredMag";
  @SerializedName(SERIALIZED_NAME_PREFERRED_MAG)
  @javax.annotation.Nullable
  private Double preferredMag;

  public static final String SERIALIZED_NAME_NUMBER_OF_PREFERRED_MAGS = "numberOfPreferredMags";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_PREFERRED_MAGS)
  @javax.annotation.Nullable
  private Double numberOfPreferredMags;

  public static final String SERIALIZED_NAME_PHASES = "phases";
  @SerializedName(SERIALIZED_NAME_PHASES)
  @javax.annotation.Nullable
  private List<Hyp2000arcPhasesInner> phases = new ArrayList<>();

  public Hyp2000arcSchemaEwMessage() {
  }

  public Hyp2000arcSchemaEwMessage quakeId(@javax.annotation.Nullable Long quakeId) {
    this.quakeId = quakeId;
    return this;
  }

  /**
   * Localspace Id | bigint(19)
   * @return quakeId
   */
  @javax.annotation.Nullable
  public Long getQuakeId() {
    return quakeId;
  }

  public void setQuakeId(@javax.annotation.Nullable Long quakeId) {
    this.quakeId = quakeId;
  }


  public Hyp2000arcSchemaEwMessage version(@javax.annotation.Nonnull String version) {
    this.version = version;
    return this;
  }

  /**
   * Localization name (es:ew prelim,XX,WW,..) | varchar(255)
   * @return version
   */
  @javax.annotation.Nonnull
  public String getVersion() {
    return version;
  }

  public void setVersion(@javax.annotation.Nonnull String version) {
    this.version = version;
  }


  public Hyp2000arcSchemaEwMessage originId(@javax.annotation.Nullable Long originId) {
    this.originId = originId;
    return this;
  }

  /**
   * Unique incremental id | bigint(20)
   * @return originId
   */
  @javax.annotation.Nullable
  public Long getOriginId() {
    return originId;
  }

  public void setOriginId(@javax.annotation.Nullable Long originId) {
    this.originId = originId;
  }


  public Hyp2000arcSchemaEwMessage originTime(@javax.annotation.Nonnull OffsetDateTime originTime) {
    this.originTime = originTime;
    return this;
  }

  /**
   * Origin time | datetime(3)
   * @return originTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getOriginTime() {
    return originTime;
  }

  public void setOriginTime(@javax.annotation.Nonnull OffsetDateTime originTime) {
    this.originTime = originTime;
  }


  public Hyp2000arcSchemaEwMessage latitude(@javax.annotation.Nonnull Double latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Latitude of a point expressed in:  * the ETRS89 system for Italian and European territories * and in WGS84 for the others.
   * minimum: -90
   * maximum: 90
   * @return latitude
   */
  @javax.annotation.Nonnull
  public Double getLatitude() {
    return latitude;
  }

  public void setLatitude(@javax.annotation.Nonnull Double latitude) {
    this.latitude = latitude;
  }


  public Hyp2000arcSchemaEwMessage longitude(@javax.annotation.Nonnull Double longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * Longitude of a point expressed in:  * the ETRS89 system for Italian and European territories * and in WGS84 for the others.
   * minimum: -180
   * maximum: 180
   * @return longitude
   */
  @javax.annotation.Nonnull
  public Double getLongitude() {
    return longitude;
  }

  public void setLongitude(@javax.annotation.Nonnull Double longitude) {
    this.longitude = longitude;
  }


  public Hyp2000arcSchemaEwMessage depth(@javax.annotation.Nonnull Double depth) {
    this.depth = depth;
    return this;
  }

  /**
   * Depth in Km | double
   * @return depth
   */
  @javax.annotation.Nonnull
  public Double getDepth() {
    return depth;
  }

  public void setDepth(@javax.annotation.Nonnull Double depth) {
    this.depth = depth;
  }


  public Hyp2000arcSchemaEwMessage nph(@javax.annotation.Nullable Long nph) {
    this.nph = nph;
    return this;
  }

  /**
   * # arrivals (P&amp;S) weight &gt;0.1 | int(11)
   * @return nph
   */
  @javax.annotation.Nullable
  public Long getNph() {
    return nph;
  }

  public void setNph(@javax.annotation.Nullable Long nph) {
    this.nph = nph;
  }


  public Hyp2000arcSchemaEwMessage nphS(@javax.annotation.Nullable Long nphS) {
    this.nphS = nphS;
    return this;
  }

  /**
   * # S arrivals weight &gt;0.1 | int(11)
   * @return nphS
   */
  @javax.annotation.Nullable
  public Long getNphS() {
    return nphS;
  }

  public void setNphS(@javax.annotation.Nullable Long nphS) {
    this.nphS = nphS;
  }


  public Hyp2000arcSchemaEwMessage nphtot(@javax.annotation.Nullable Long nphtot) {
    this.nphtot = nphtot;
    return this;
  }

  /**
   * # arrivals (P&amp;S) weight &gt;0.0 | int(11)
   * @return nphtot
   */
  @javax.annotation.Nullable
  public Long getNphtot() {
    return nphtot;
  }

  public void setNphtot(@javax.annotation.Nullable Long nphtot) {
    this.nphtot = nphtot;
  }


  public Hyp2000arcSchemaEwMessage nPfm(@javax.annotation.Nullable Long nPfm) {
    this.nPfm = nPfm;
    return this;
  }

  /**
   * # P first motions | int(11)
   * @return nPfm
   */
  @javax.annotation.Nullable
  public Long getnPfm() {
    return nPfm;
  }

  public void setnPfm(@javax.annotation.Nullable Long nPfm) {
    this.nPfm = nPfm;
  }


  public Hyp2000arcSchemaEwMessage gap(@javax.annotation.Nullable Float gap) {
    this.gap = gap;
    return this;
  }

  /**
   * Azimutal gap | float4
   * @return gap
   */
  @javax.annotation.Nullable
  public Float getGap() {
    return gap;
  }

  public void setGap(@javax.annotation.Nullable Float gap) {
    this.gap = gap;
  }


  public Hyp2000arcSchemaEwMessage dmin(@javax.annotation.Nullable Double dmin) {
    this.dmin = dmin;
    return this;
  }

  /**
   * dmin description | ???
   * @return dmin
   */
  @javax.annotation.Nullable
  public Double getDmin() {
    return dmin;
  }

  public void setDmin(@javax.annotation.Nullable Double dmin) {
    this.dmin = dmin;
  }


  public Hyp2000arcSchemaEwMessage rms(@javax.annotation.Nullable Double rms) {
    this.rms = rms;
    return this;
  }

  /**
   * Root mean square | double
   * @return rms
   */
  @javax.annotation.Nullable
  public Double getRms() {
    return rms;
  }

  public void setRms(@javax.annotation.Nullable Double rms) {
    this.rms = rms;
  }


  public Hyp2000arcSchemaEwMessage e0az(@javax.annotation.Nullable Float e0az) {
    this.e0az = e0az;
    return this;
  }

  /**
   * azimuth of largest principal error | double
   * @return e0az
   */
  @javax.annotation.Nullable
  public Float getE0az() {
    return e0az;
  }

  public void setE0az(@javax.annotation.Nullable Float e0az) {
    this.e0az = e0az;
  }


  public Hyp2000arcSchemaEwMessage e0dp(@javax.annotation.Nullable Double e0dp) {
    this.e0dp = e0dp;
    return this;
  }

  /**
   * dip of largest principal error | double
   * @return e0dp
   */
  @javax.annotation.Nullable
  public Double getE0dp() {
    return e0dp;
  }

  public void setE0dp(@javax.annotation.Nullable Double e0dp) {
    this.e0dp = e0dp;
  }


  public Hyp2000arcSchemaEwMessage e0(@javax.annotation.Nullable Double e0) {
    this.e0 = e0;
    return this;
  }

  /**
   * largest principal error | double
   * @return e0
   */
  @javax.annotation.Nullable
  public Double getE0() {
    return e0;
  }

  public void setE0(@javax.annotation.Nullable Double e0) {
    this.e0 = e0;
  }


  public Hyp2000arcSchemaEwMessage e1az(@javax.annotation.Nullable Float e1az) {
    this.e1az = e1az;
    return this;
  }

  /**
   * azimuth of intermediate principal error | double
   * @return e1az
   */
  @javax.annotation.Nullable
  public Float getE1az() {
    return e1az;
  }

  public void setE1az(@javax.annotation.Nullable Float e1az) {
    this.e1az = e1az;
  }


  public Hyp2000arcSchemaEwMessage e1dp(@javax.annotation.Nullable Double e1dp) {
    this.e1dp = e1dp;
    return this;
  }

  /**
   * dip of intermediate principal error | double
   * @return e1dp
   */
  @javax.annotation.Nullable
  public Double getE1dp() {
    return e1dp;
  }

  public void setE1dp(@javax.annotation.Nullable Double e1dp) {
    this.e1dp = e1dp;
  }


  public Hyp2000arcSchemaEwMessage e1(@javax.annotation.Nullable Double e1) {
    this.e1 = e1;
    return this;
  }

  /**
   * intermed principal error | double
   * @return e1
   */
  @javax.annotation.Nullable
  public Double getE1() {
    return e1;
  }

  public void setE1(@javax.annotation.Nullable Double e1) {
    this.e1 = e1;
  }


  public Hyp2000arcSchemaEwMessage e2(@javax.annotation.Nullable Double e2) {
    this.e2 = e2;
    return this;
  }

  /**
   * smallest principal error | double
   * @return e2
   */
  @javax.annotation.Nullable
  public Double getE2() {
    return e2;
  }

  public void setE2(@javax.annotation.Nullable Double e2) {
    this.e2 = e2;
  }


  public Hyp2000arcSchemaEwMessage erh(@javax.annotation.Nullable Double erh) {
    this.erh = erh;
    return this;
  }

  /**
   * Horizontal error (km) | double
   * @return erh
   */
  @javax.annotation.Nullable
  public Double getErh() {
    return erh;
  }

  public void setErh(@javax.annotation.Nullable Double erh) {
    this.erh = erh;
  }


  public Hyp2000arcSchemaEwMessage erz(@javax.annotation.Nullable Double erz) {
    this.erz = erz;
    return this;
  }

  /**
   * Depth error (km) | double
   * @return erz
   */
  @javax.annotation.Nullable
  public Double getErz() {
    return erz;
  }

  public void setErz(@javax.annotation.Nullable Double erz) {
    this.erz = erz;
  }


  public Hyp2000arcSchemaEwMessage md(@javax.annotation.Nullable Double md) {
    this.md = md;
    return this;
  }

  /**
   * Md description | ???
   * @return md
   */
  @javax.annotation.Nullable
  public Double getMd() {
    return md;
  }

  public void setMd(@javax.annotation.Nullable Double md) {
    this.md = md;
  }


  public Hyp2000arcSchemaEwMessage reg(@javax.annotation.Nullable String reg) {
    this.reg = reg;
    return this;
  }

  /**
   * ingvQuality description | ???
   * @return reg
   */
  @javax.annotation.Nullable
  public String getReg() {
    return reg;
  }

  public void setReg(@javax.annotation.Nullable String reg) {
    this.reg = reg;
  }


  public Hyp2000arcSchemaEwMessage labelpref(@javax.annotation.Nullable String labelpref) {
    this.labelpref = labelpref;
    return this;
  }

  /**
   * ingvQuality description | ???
   * @return labelpref
   */
  @javax.annotation.Nullable
  public String getLabelpref() {
    return labelpref;
  }

  public void setLabelpref(@javax.annotation.Nullable String labelpref) {
    this.labelpref = labelpref;
  }


  public Hyp2000arcSchemaEwMessage mpref(@javax.annotation.Nullable Double mpref) {
    this.mpref = mpref;
    return this;
  }

  /**
   * Mpref description | ???
   * @return mpref
   */
  @javax.annotation.Nullable
  public Double getMpref() {
    return mpref;
  }

  public void setMpref(@javax.annotation.Nullable Double mpref) {
    this.mpref = mpref;
  }


  public Hyp2000arcSchemaEwMessage wtpref(@javax.annotation.Nullable Double wtpref) {
    this.wtpref = wtpref;
    return this;
  }

  /**
   * wtpref description | ???
   * @return wtpref
   */
  @javax.annotation.Nullable
  public Double getWtpref() {
    return wtpref;
  }

  public void setWtpref(@javax.annotation.Nullable Double wtpref) {
    this.wtpref = wtpref;
  }


  public Hyp2000arcSchemaEwMessage mdtype(@javax.annotation.Nullable String mdtype) {
    this.mdtype = mdtype;
    return this;
  }

  /**
   * ingvQuality description | ???
   * @return mdtype
   */
  @javax.annotation.Nullable
  public String getMdtype() {
    return mdtype;
  }

  public void setMdtype(@javax.annotation.Nullable String mdtype) {
    this.mdtype = mdtype;
  }


  public Hyp2000arcSchemaEwMessage mdmad(@javax.annotation.Nullable Double mdmad) {
    this.mdmad = mdmad;
    return this;
  }

  /**
   * mdmad description | ???
   * @return mdmad
   */
  @javax.annotation.Nullable
  public Double getMdmad() {
    return mdmad;
  }

  public void setMdmad(@javax.annotation.Nullable Double mdmad) {
    this.mdmad = mdmad;
  }


  public Hyp2000arcSchemaEwMessage mdwt(@javax.annotation.Nullable Double mdwt) {
    this.mdwt = mdwt;
    return this;
  }

  /**
   * mdwt description | ???
   * @return mdwt
   */
  @javax.annotation.Nullable
  public Double getMdwt() {
    return mdwt;
  }

  public void setMdwt(@javax.annotation.Nullable Double mdwt) {
    this.mdwt = mdwt;
  }


  public Hyp2000arcSchemaEwMessage ingvQuality(@javax.annotation.Nullable String ingvQuality) {
    this.ingvQuality = ingvQuality;
    return this;
  }

  /**
   * ingvQuality description | ???
   * @return ingvQuality
   */
  @javax.annotation.Nullable
  public String getIngvQuality() {
    return ingvQuality;
  }

  public void setIngvQuality(@javax.annotation.Nullable String ingvQuality) {
    this.ingvQuality = ingvQuality;
  }


  public Hyp2000arcSchemaEwMessage amplitudeMagnitude(@javax.annotation.Nullable Double amplitudeMagnitude) {
    this.amplitudeMagnitude = amplitudeMagnitude;
    return this;
  }

  /**
   * amplitudeMagnitude description | col37 F3.2
   * @return amplitudeMagnitude
   */
  @javax.annotation.Nullable
  public Double getAmplitudeMagnitude() {
    return amplitudeMagnitude;
  }

  public void setAmplitudeMagnitude(@javax.annotation.Nullable Double amplitudeMagnitude) {
    this.amplitudeMagnitude = amplitudeMagnitude;
  }


  public Hyp2000arcSchemaEwMessage numberOfAmpMagWeightCode(@javax.annotation.Nullable Double numberOfAmpMagWeightCode) {
    this.numberOfAmpMagWeightCode = numberOfAmpMagWeightCode;
    return this;
  }

  /**
   * numberOfAmpMagWeightCode description | col97 F4.1
   * @return numberOfAmpMagWeightCode
   */
  @javax.annotation.Nullable
  public Double getNumberOfAmpMagWeightCode() {
    return numberOfAmpMagWeightCode;
  }

  public void setNumberOfAmpMagWeightCode(@javax.annotation.Nullable Double numberOfAmpMagWeightCode) {
    this.numberOfAmpMagWeightCode = numberOfAmpMagWeightCode;
  }


  public Hyp2000arcSchemaEwMessage medianAbsDiffAmpMag(@javax.annotation.Nullable Double medianAbsDiffAmpMag) {
    this.medianAbsDiffAmpMag = medianAbsDiffAmpMag;
    return this;
  }

  /**
   * medianAbsDiffAmpMag description | col105 F3.2
   * @return medianAbsDiffAmpMag
   */
  @javax.annotation.Nullable
  public Double getMedianAbsDiffAmpMag() {
    return medianAbsDiffAmpMag;
  }

  public void setMedianAbsDiffAmpMag(@javax.annotation.Nullable Double medianAbsDiffAmpMag) {
    this.medianAbsDiffAmpMag = medianAbsDiffAmpMag;
  }


  public Hyp2000arcSchemaEwMessage preferredMagLabel(@javax.annotation.Nullable String preferredMagLabel) {
    this.preferredMagLabel = preferredMagLabel;
    return this;
  }

  /**
   * preferredMagLabel description | ???
   * @return preferredMagLabel
   */
  @javax.annotation.Nullable
  public String getPreferredMagLabel() {
    return preferredMagLabel;
  }

  public void setPreferredMagLabel(@javax.annotation.Nullable String preferredMagLabel) {
    this.preferredMagLabel = preferredMagLabel;
  }


  public Hyp2000arcSchemaEwMessage preferredMag(@javax.annotation.Nullable Double preferredMag) {
    this.preferredMag = preferredMag;
    return this;
  }

  /**
   * preferredMag description | ???
   * @return preferredMag
   */
  @javax.annotation.Nullable
  public Double getPreferredMag() {
    return preferredMag;
  }

  public void setPreferredMag(@javax.annotation.Nullable Double preferredMag) {
    this.preferredMag = preferredMag;
  }


  public Hyp2000arcSchemaEwMessage numberOfPreferredMags(@javax.annotation.Nullable Double numberOfPreferredMags) {
    this.numberOfPreferredMags = numberOfPreferredMags;
    return this;
  }

  /**
   * numberOfPreferredMags description | ???
   * @return numberOfPreferredMags
   */
  @javax.annotation.Nullable
  public Double getNumberOfPreferredMags() {
    return numberOfPreferredMags;
  }

  public void setNumberOfPreferredMags(@javax.annotation.Nullable Double numberOfPreferredMags) {
    this.numberOfPreferredMags = numberOfPreferredMags;
  }


  public Hyp2000arcSchemaEwMessage phases(@javax.annotation.Nullable List<Hyp2000arcPhasesInner> phases) {
    this.phases = phases;
    return this;
  }

  public Hyp2000arcSchemaEwMessage addPhasesItem(Hyp2000arcPhasesInner phasesItem) {
    if (this.phases == null) {
      this.phases = new ArrayList<>();
    }
    this.phases.add(phasesItem);
    return this;
  }

  /**
   * Get phases
   * @return phases
   */
  @javax.annotation.Nullable
  public List<Hyp2000arcPhasesInner> getPhases() {
    return phases;
  }

  public void setPhases(@javax.annotation.Nullable List<Hyp2000arcPhasesInner> phases) {
    this.phases = phases;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Hyp2000arcSchemaEwMessage instance itself
   */
  public Hyp2000arcSchemaEwMessage putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Hyp2000arcSchemaEwMessage hyp2000arcSchemaEwMessage = (Hyp2000arcSchemaEwMessage) o;
    return Objects.equals(this.quakeId, hyp2000arcSchemaEwMessage.quakeId) &&
        Objects.equals(this.version, hyp2000arcSchemaEwMessage.version) &&
        Objects.equals(this.originId, hyp2000arcSchemaEwMessage.originId) &&
        Objects.equals(this.originTime, hyp2000arcSchemaEwMessage.originTime) &&
        Objects.equals(this.latitude, hyp2000arcSchemaEwMessage.latitude) &&
        Objects.equals(this.longitude, hyp2000arcSchemaEwMessage.longitude) &&
        Objects.equals(this.depth, hyp2000arcSchemaEwMessage.depth) &&
        Objects.equals(this.nph, hyp2000arcSchemaEwMessage.nph) &&
        Objects.equals(this.nphS, hyp2000arcSchemaEwMessage.nphS) &&
        Objects.equals(this.nphtot, hyp2000arcSchemaEwMessage.nphtot) &&
        Objects.equals(this.nPfm, hyp2000arcSchemaEwMessage.nPfm) &&
        Objects.equals(this.gap, hyp2000arcSchemaEwMessage.gap) &&
        Objects.equals(this.dmin, hyp2000arcSchemaEwMessage.dmin) &&
        Objects.equals(this.rms, hyp2000arcSchemaEwMessage.rms) &&
        Objects.equals(this.e0az, hyp2000arcSchemaEwMessage.e0az) &&
        Objects.equals(this.e0dp, hyp2000arcSchemaEwMessage.e0dp) &&
        Objects.equals(this.e0, hyp2000arcSchemaEwMessage.e0) &&
        Objects.equals(this.e1az, hyp2000arcSchemaEwMessage.e1az) &&
        Objects.equals(this.e1dp, hyp2000arcSchemaEwMessage.e1dp) &&
        Objects.equals(this.e1, hyp2000arcSchemaEwMessage.e1) &&
        Objects.equals(this.e2, hyp2000arcSchemaEwMessage.e2) &&
        Objects.equals(this.erh, hyp2000arcSchemaEwMessage.erh) &&
        Objects.equals(this.erz, hyp2000arcSchemaEwMessage.erz) &&
        Objects.equals(this.md, hyp2000arcSchemaEwMessage.md) &&
        Objects.equals(this.reg, hyp2000arcSchemaEwMessage.reg) &&
        Objects.equals(this.labelpref, hyp2000arcSchemaEwMessage.labelpref) &&
        Objects.equals(this.mpref, hyp2000arcSchemaEwMessage.mpref) &&
        Objects.equals(this.wtpref, hyp2000arcSchemaEwMessage.wtpref) &&
        Objects.equals(this.mdtype, hyp2000arcSchemaEwMessage.mdtype) &&
        Objects.equals(this.mdmad, hyp2000arcSchemaEwMessage.mdmad) &&
        Objects.equals(this.mdwt, hyp2000arcSchemaEwMessage.mdwt) &&
        Objects.equals(this.ingvQuality, hyp2000arcSchemaEwMessage.ingvQuality) &&
        Objects.equals(this.amplitudeMagnitude, hyp2000arcSchemaEwMessage.amplitudeMagnitude) &&
        Objects.equals(this.numberOfAmpMagWeightCode, hyp2000arcSchemaEwMessage.numberOfAmpMagWeightCode) &&
        Objects.equals(this.medianAbsDiffAmpMag, hyp2000arcSchemaEwMessage.medianAbsDiffAmpMag) &&
        Objects.equals(this.preferredMagLabel, hyp2000arcSchemaEwMessage.preferredMagLabel) &&
        Objects.equals(this.preferredMag, hyp2000arcSchemaEwMessage.preferredMag) &&
        Objects.equals(this.numberOfPreferredMags, hyp2000arcSchemaEwMessage.numberOfPreferredMags) &&
        Objects.equals(this.phases, hyp2000arcSchemaEwMessage.phases)&&
        Objects.equals(this.additionalProperties, hyp2000arcSchemaEwMessage.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(quakeId, version, originId, originTime, latitude, longitude, depth, nph, nphS, nphtot, nPfm, gap, dmin, rms, e0az, e0dp, e0, e1az, e1dp, e1, e2, erh, erz, md, reg, labelpref, mpref, wtpref, mdtype, mdmad, mdwt, ingvQuality, amplitudeMagnitude, numberOfAmpMagWeightCode, medianAbsDiffAmpMag, preferredMagLabel, preferredMag, numberOfPreferredMags, phases, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Hyp2000arcSchemaEwMessage {\n");
    sb.append("    quakeId: ").append(toIndentedString(quakeId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    originId: ").append(toIndentedString(originId)).append("\n");
    sb.append("    originTime: ").append(toIndentedString(originTime)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    depth: ").append(toIndentedString(depth)).append("\n");
    sb.append("    nph: ").append(toIndentedString(nph)).append("\n");
    sb.append("    nphS: ").append(toIndentedString(nphS)).append("\n");
    sb.append("    nphtot: ").append(toIndentedString(nphtot)).append("\n");
    sb.append("    nPfm: ").append(toIndentedString(nPfm)).append("\n");
    sb.append("    gap: ").append(toIndentedString(gap)).append("\n");
    sb.append("    dmin: ").append(toIndentedString(dmin)).append("\n");
    sb.append("    rms: ").append(toIndentedString(rms)).append("\n");
    sb.append("    e0az: ").append(toIndentedString(e0az)).append("\n");
    sb.append("    e0dp: ").append(toIndentedString(e0dp)).append("\n");
    sb.append("    e0: ").append(toIndentedString(e0)).append("\n");
    sb.append("    e1az: ").append(toIndentedString(e1az)).append("\n");
    sb.append("    e1dp: ").append(toIndentedString(e1dp)).append("\n");
    sb.append("    e1: ").append(toIndentedString(e1)).append("\n");
    sb.append("    e2: ").append(toIndentedString(e2)).append("\n");
    sb.append("    erh: ").append(toIndentedString(erh)).append("\n");
    sb.append("    erz: ").append(toIndentedString(erz)).append("\n");
    sb.append("    md: ").append(toIndentedString(md)).append("\n");
    sb.append("    reg: ").append(toIndentedString(reg)).append("\n");
    sb.append("    labelpref: ").append(toIndentedString(labelpref)).append("\n");
    sb.append("    mpref: ").append(toIndentedString(mpref)).append("\n");
    sb.append("    wtpref: ").append(toIndentedString(wtpref)).append("\n");
    sb.append("    mdtype: ").append(toIndentedString(mdtype)).append("\n");
    sb.append("    mdmad: ").append(toIndentedString(mdmad)).append("\n");
    sb.append("    mdwt: ").append(toIndentedString(mdwt)).append("\n");
    sb.append("    ingvQuality: ").append(toIndentedString(ingvQuality)).append("\n");
    sb.append("    amplitudeMagnitude: ").append(toIndentedString(amplitudeMagnitude)).append("\n");
    sb.append("    numberOfAmpMagWeightCode: ").append(toIndentedString(numberOfAmpMagWeightCode)).append("\n");
    sb.append("    medianAbsDiffAmpMag: ").append(toIndentedString(medianAbsDiffAmpMag)).append("\n");
    sb.append("    preferredMagLabel: ").append(toIndentedString(preferredMagLabel)).append("\n");
    sb.append("    preferredMag: ").append(toIndentedString(preferredMag)).append("\n");
    sb.append("    numberOfPreferredMags: ").append(toIndentedString(numberOfPreferredMags)).append("\n");
    sb.append("    phases: ").append(toIndentedString(phases)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("quakeId");
    openapiFields.add("version");
    openapiFields.add("originId");
    openapiFields.add("originTime");
    openapiFields.add("latitude");
    openapiFields.add("longitude");
    openapiFields.add("depth");
    openapiFields.add("nph");
    openapiFields.add("nphS");
    openapiFields.add("nphtot");
    openapiFields.add("nPfm");
    openapiFields.add("gap");
    openapiFields.add("dmin");
    openapiFields.add("rms");
    openapiFields.add("e0az");
    openapiFields.add("e0dp");
    openapiFields.add("e0");
    openapiFields.add("e1az");
    openapiFields.add("e1dp");
    openapiFields.add("e1");
    openapiFields.add("e2");
    openapiFields.add("erh");
    openapiFields.add("erz");
    openapiFields.add("Md");
    openapiFields.add("reg");
    openapiFields.add("labelpref");
    openapiFields.add("Mpref");
    openapiFields.add("wtpref");
    openapiFields.add("mdtype");
    openapiFields.add("mdmad");
    openapiFields.add("mdwt");
    openapiFields.add("ingvQuality");
    openapiFields.add("amplitudeMagnitude");
    openapiFields.add("numberOfAmpMagWeightCode");
    openapiFields.add("medianAbsDiffAmpMag");
    openapiFields.add("preferredMagLabel");
    openapiFields.add("preferredMag");
    openapiFields.add("numberOfPreferredMags");
    openapiFields.add("phases");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("quakeId");
    openapiRequiredFields.add("version");
    openapiRequiredFields.add("originTime");
    openapiRequiredFields.add("latitude");
    openapiRequiredFields.add("longitude");
    openapiRequiredFields.add("depth");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Hyp2000arcSchemaEwMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Hyp2000arcSchemaEwMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Hyp2000arcSchemaEwMessage is not found in the empty JSON string", Hyp2000arcSchemaEwMessage.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Hyp2000arcSchemaEwMessage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
      if ((jsonObj.get("reg") != null && !jsonObj.get("reg").isJsonNull()) && !jsonObj.get("reg").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reg` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reg").toString()));
      }
      if ((jsonObj.get("labelpref") != null && !jsonObj.get("labelpref").isJsonNull()) && !jsonObj.get("labelpref").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `labelpref` to be a primitive type in the JSON string but got `%s`", jsonObj.get("labelpref").toString()));
      }
      if ((jsonObj.get("mdtype") != null && !jsonObj.get("mdtype").isJsonNull()) && !jsonObj.get("mdtype").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mdtype` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mdtype").toString()));
      }
      if ((jsonObj.get("ingvQuality") != null && !jsonObj.get("ingvQuality").isJsonNull()) && !jsonObj.get("ingvQuality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ingvQuality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ingvQuality").toString()));
      }
      if ((jsonObj.get("preferredMagLabel") != null && !jsonObj.get("preferredMagLabel").isJsonNull()) && !jsonObj.get("preferredMagLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferredMagLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preferredMagLabel").toString()));
      }
      if (jsonObj.get("phases") != null && !jsonObj.get("phases").isJsonNull()) {
        JsonArray jsonArrayphases = jsonObj.getAsJsonArray("phases");
        if (jsonArrayphases != null) {
          // ensure the json data is an array
          if (!jsonObj.get("phases").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `phases` to be an array in the JSON string but got `%s`", jsonObj.get("phases").toString()));
          }

          // validate the optional field `phases` (array)
          for (int i = 0; i < jsonArrayphases.size(); i++) {
            Hyp2000arcPhasesInner.validateJsonElement(jsonArrayphases.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Hyp2000arcSchemaEwMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Hyp2000arcSchemaEwMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Hyp2000arcSchemaEwMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Hyp2000arcSchemaEwMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<Hyp2000arcSchemaEwMessage>() {
           @Override
           public void write(JsonWriter out, Hyp2000arcSchemaEwMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   JsonElement jsonElement = gson.toJsonTree(entry.getValue());
                   if (jsonElement.isJsonArray()) {
                     obj.add(entry.getKey(), jsonElement.getAsJsonArray());
                   } else {
                     obj.add(entry.getKey(), jsonElement.getAsJsonObject());
                   }
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Hyp2000arcSchemaEwMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             Hyp2000arcSchemaEwMessage instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Hyp2000arcSchemaEwMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Hyp2000arcSchemaEwMessage
   * @throws IOException if the JSON string is invalid with respect to Hyp2000arcSchemaEwMessage
   */
  public static Hyp2000arcSchemaEwMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Hyp2000arcSchemaEwMessage.class);
  }

  /**
   * Convert an instance of Hyp2000arcSchemaEwMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

