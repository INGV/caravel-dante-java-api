/*
 * Dante Web Services
 *       # Introduction   Dante is an API Web Service used for iteract with earthquake data stored in database (**quakedb**); the **quakedb** database schema is used at INGV.   Use other schema would require cration of specific `Model` and `Controller` but this is the potential of web services.      Dante provides a set of routes to store message **event**, **origin**, **magnitude**, **arrival**, **...**.      # Input   As input, Dante acept:   - A `json` message (view '**store**' spec below)    - An Eartworm `json` message (view '**earthworm api**' spec below) produced by **ew2openapi** module      # Output   As output, Dante has a RESTful api foreach database table and implement three specific routes:    - `events-pref`: returns the preferred origin and the preferred magnitude from all clusterd events.    - `events`: returns the preferred origin and the preferred magnitude from the same instance.    - `event`: returns the full event (event, origins, magnitudes, arrivals, amplitude, etc...) from an **eventid** or **originid**_/_**originid**.        
 *
 * The version of the OpenAPI document: 2.45.0-dev
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.dante.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.ingv.dante.model.MagnitudePhasesInner;
import org.ingv.dante.model.TypeOriginName;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.ingv.dante.JSON;

/**
 * MagnitudeBaseEwMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-13T14:14:41.743063Z[Etc/UTC]")
public class MagnitudeBaseEwMessage {
  public static final String SERIALIZED_NAME_QUAKE_ID = "quakeId";
  @SerializedName(SERIALIZED_NAME_QUAKE_ID)
  private Long quakeId;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private TypeOriginName version = TypeOriginName.HYPOCENTER;

  public static final String SERIALIZED_NAME_MAG = "mag";
  @SerializedName(SERIALIZED_NAME_MAG)
  private Double mag;

  public static final String SERIALIZED_NAME_ERROR = "error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private Double error;

  public static final String SERIALIZED_NAME_QUALITY = "quality";
  @SerializedName(SERIALIZED_NAME_QUALITY)
  private Double quality;

  public static final String SERIALIZED_NAME_MIN_DIST = "minDist";
  @SerializedName(SERIALIZED_NAME_MIN_DIST)
  private Double minDist;

  public static final String SERIALIZED_NAME_AZIMUTH = "azimuth";
  @SerializedName(SERIALIZED_NAME_AZIMUTH)
  private Float azimuth;

  public static final String SERIALIZED_NAME_N_STATIONS = "nStations";
  @SerializedName(SERIALIZED_NAME_N_STATIONS)
  private Long nStations;

  public static final String SERIALIZED_NAME_N_CHANNELS = "nChannels";
  @SerializedName(SERIALIZED_NAME_N_CHANNELS)
  private Long nChannels;

  public static final String SERIALIZED_NAME_Q_AUTHOR = "qAuthor";
  @SerializedName(SERIALIZED_NAME_Q_AUTHOR)
  private String qAuthor;

  public static final String SERIALIZED_NAME_QDDS_VERSION = "qddsVersion";
  @SerializedName(SERIALIZED_NAME_QDDS_VERSION)
  private Double qddsVersion;

  public static final String SERIALIZED_NAME_I_MAG_TYPE = "iMagType";
  @SerializedName(SERIALIZED_NAME_I_MAG_TYPE)
  private Double iMagType;

  public static final String SERIALIZED_NAME_MAG_TYPE = "magType";
  @SerializedName(SERIALIZED_NAME_MAG_TYPE)
  private String magType;

  public static final String SERIALIZED_NAME_ALGORITHM = "algorithm";
  @SerializedName(SERIALIZED_NAME_ALGORITHM)
  private Double algorithm;

  public static final String SERIALIZED_NAME_INGV_QUALITY = "ingvQuality";
  @SerializedName(SERIALIZED_NAME_INGV_QUALITY)
  private String ingvQuality;

  public static final String SERIALIZED_NAME_PHASES = "phases";
  @SerializedName(SERIALIZED_NAME_PHASES)
  private List<MagnitudePhasesInner> phases = null;

  public MagnitudeBaseEwMessage() { 
  }

  public MagnitudeBaseEwMessage quakeId(Long quakeId) {
    
    this.quakeId = quakeId;
    return this;
  }

   /**
   * Localspace Id | bigint(19)
   * @return quakeId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "182491", required = true, value = "Localspace Id | bigint(19)")

  public Long getQuakeId() {
    return quakeId;
  }


  public void setQuakeId(Long quakeId) {
    this.quakeId = quakeId;
  }


  public MagnitudeBaseEwMessage version(TypeOriginName version) {
    
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public TypeOriginName getVersion() {
    return version;
  }


  public void setVersion(TypeOriginName version) {
    this.version = version;
  }


  public MagnitudeBaseEwMessage mag(Double mag) {
    
    this.mag = mag;
    return this;
  }

   /**
   * Magnitude value | double
   * @return mag
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "3.01", required = true, value = "Magnitude value | double")

  public Double getMag() {
    return mag;
  }


  public void setMag(Double mag) {
    this.mag = mag;
  }


  public MagnitudeBaseEwMessage error(Double error) {
    
    this.error = error;
    return this;
  }

   /**
   * Magnitude error | double
   * @return error
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0.52", value = "Magnitude error | double")

  public Double getError() {
    return error;
  }


  public void setError(Double error) {
    this.error = error;
  }


  public MagnitudeBaseEwMessage quality(Double quality) {
    
    this.quality = quality;
    return this;
  }

   /**
   * quality | double
   * @return quality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "quality | double")

  public Double getQuality() {
    return quality;
  }


  public void setQuality(Double quality) {
    this.quality = quality;
  }


  public MagnitudeBaseEwMessage minDist(Double minDist) {
    
    this.minDist = minDist;
    return this;
  }

   /**
   * Minimal distance from station to origin | double
   * @return minDist
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Minimal distance from station to origin | double")

  public Double getMinDist() {
    return minDist;
  }


  public void setMinDist(Double minDist) {
    this.minDist = minDist;
  }


  public MagnitudeBaseEwMessage azimuth(Float azimuth) {
    
    this.azimuth = azimuth;
    return this;
  }

   /**
   * Azimutal gap | float4
   * @return azimuth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Azimutal gap | float4")

  public Float getAzimuth() {
    return azimuth;
  }


  public void setAzimuth(Float azimuth) {
    this.azimuth = azimuth;
  }


  public MagnitudeBaseEwMessage nStations(Long nStations) {
    
    this.nStations = nStations;
    return this;
  }

   /**
   * Number of the stations on magnitudo calculation | int(11)
   * @return nStations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of the stations on magnitudo calculation | int(11)")

  public Long getnStations() {
    return nStations;
  }


  public void setnStations(Long nStations) {
    this.nStations = nStations;
  }


  public MagnitudeBaseEwMessage nChannels(Long nChannels) {
    
    this.nChannels = nChannels;
    return this;
  }

   /**
   * Number of the channel on magnitudo calculation | int(11)
   * @return nChannels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of the channel on magnitudo calculation | int(11)")

  public Long getnChannels() {
    return nChannels;
  }


  public void setnChannels(Long nChannels) {
    this.nChannels = nChannels;
  }


  public MagnitudeBaseEwMessage qAuthor(String qAuthor) {
    
    this.qAuthor = qAuthor;
    return this;
  }

   /**
   * qAuthor description
   * @return qAuthor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "014101073:028130073", value = "qAuthor description")

  public String getqAuthor() {
    return qAuthor;
  }


  public void setqAuthor(String qAuthor) {
    this.qAuthor = qAuthor;
  }


  public MagnitudeBaseEwMessage qddsVersion(Double qddsVersion) {
    
    this.qddsVersion = qddsVersion;
    return this;
  }

   /**
   * qddsVersion description
   * @return qddsVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "qddsVersion description")

  public Double getQddsVersion() {
    return qddsVersion;
  }


  public void setQddsVersion(Double qddsVersion) {
    this.qddsVersion = qddsVersion;
  }


  public MagnitudeBaseEwMessage iMagType(Double iMagType) {
    
    this.iMagType = iMagType;
    return this;
  }

   /**
   * iMagType description
   * @return iMagType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "iMagType description")

  public Double getiMagType() {
    return iMagType;
  }


  public void setiMagType(Double iMagType) {
    this.iMagType = iMagType;
  }


  public MagnitudeBaseEwMessage magType(String magType) {
    
    this.magType = magType;
    return this;
  }

   /**
   * Type of the magnitude | varchar(255)
   * @return magType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ML-VAX", value = "Type of the magnitude | varchar(255)")

  public String getMagType() {
    return magType;
  }


  public void setMagType(String magType) {
    this.magType = magType;
  }


  public MagnitudeBaseEwMessage algorithm(Double algorithm) {
    
    this.algorithm = algorithm;
    return this;
  }

   /**
   * algorithm description
   * @return algorithm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "MED", value = "algorithm description")

  public Double getAlgorithm() {
    return algorithm;
  }


  public void setAlgorithm(Double algorithm) {
    this.algorithm = algorithm;
  }


  public MagnitudeBaseEwMessage ingvQuality(String ingvQuality) {
    
    this.ingvQuality = ingvQuality;
    return this;
  }

   /**
   * INGV quality code of the magnitude (computed by ew2moledb) | char(2)
   * @return ingvQuality
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "BB", value = "INGV quality code of the magnitude (computed by ew2moledb) | char(2)")

  public String getIngvQuality() {
    return ingvQuality;
  }


  public void setIngvQuality(String ingvQuality) {
    this.ingvQuality = ingvQuality;
  }


  public MagnitudeBaseEwMessage phases(List<MagnitudePhasesInner> phases) {
    
    this.phases = phases;
    return this;
  }

  public MagnitudeBaseEwMessage addPhasesItem(MagnitudePhasesInner phasesItem) {
    if (this.phases == null) {
      this.phases = new ArrayList<>();
    }
    this.phases.add(phasesItem);
    return this;
  }

   /**
   * Get phases
   * @return phases
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<MagnitudePhasesInner> getPhases() {
    return phases;
  }


  public void setPhases(List<MagnitudePhasesInner> phases) {
    this.phases = phases;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MagnitudeBaseEwMessage magnitudeBaseEwMessage = (MagnitudeBaseEwMessage) o;
    return Objects.equals(this.quakeId, magnitudeBaseEwMessage.quakeId) &&
        Objects.equals(this.version, magnitudeBaseEwMessage.version) &&
        Objects.equals(this.mag, magnitudeBaseEwMessage.mag) &&
        Objects.equals(this.error, magnitudeBaseEwMessage.error) &&
        Objects.equals(this.quality, magnitudeBaseEwMessage.quality) &&
        Objects.equals(this.minDist, magnitudeBaseEwMessage.minDist) &&
        Objects.equals(this.azimuth, magnitudeBaseEwMessage.azimuth) &&
        Objects.equals(this.nStations, magnitudeBaseEwMessage.nStations) &&
        Objects.equals(this.nChannels, magnitudeBaseEwMessage.nChannels) &&
        Objects.equals(this.qAuthor, magnitudeBaseEwMessage.qAuthor) &&
        Objects.equals(this.qddsVersion, magnitudeBaseEwMessage.qddsVersion) &&
        Objects.equals(this.iMagType, magnitudeBaseEwMessage.iMagType) &&
        Objects.equals(this.magType, magnitudeBaseEwMessage.magType) &&
        Objects.equals(this.algorithm, magnitudeBaseEwMessage.algorithm) &&
        Objects.equals(this.ingvQuality, magnitudeBaseEwMessage.ingvQuality) &&
        Objects.equals(this.phases, magnitudeBaseEwMessage.phases);
  }

  @Override
  public int hashCode() {
    return Objects.hash(quakeId, version, mag, error, quality, minDist, azimuth, nStations, nChannels, qAuthor, qddsVersion, iMagType, magType, algorithm, ingvQuality, phases);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MagnitudeBaseEwMessage {\n");
    sb.append("    quakeId: ").append(toIndentedString(quakeId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    mag: ").append(toIndentedString(mag)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    quality: ").append(toIndentedString(quality)).append("\n");
    sb.append("    minDist: ").append(toIndentedString(minDist)).append("\n");
    sb.append("    azimuth: ").append(toIndentedString(azimuth)).append("\n");
    sb.append("    nStations: ").append(toIndentedString(nStations)).append("\n");
    sb.append("    nChannels: ").append(toIndentedString(nChannels)).append("\n");
    sb.append("    qAuthor: ").append(toIndentedString(qAuthor)).append("\n");
    sb.append("    qddsVersion: ").append(toIndentedString(qddsVersion)).append("\n");
    sb.append("    iMagType: ").append(toIndentedString(iMagType)).append("\n");
    sb.append("    magType: ").append(toIndentedString(magType)).append("\n");
    sb.append("    algorithm: ").append(toIndentedString(algorithm)).append("\n");
    sb.append("    ingvQuality: ").append(toIndentedString(ingvQuality)).append("\n");
    sb.append("    phases: ").append(toIndentedString(phases)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("quakeId");
    openapiFields.add("version");
    openapiFields.add("mag");
    openapiFields.add("error");
    openapiFields.add("quality");
    openapiFields.add("minDist");
    openapiFields.add("azimuth");
    openapiFields.add("nStations");
    openapiFields.add("nChannels");
    openapiFields.add("qAuthor");
    openapiFields.add("qddsVersion");
    openapiFields.add("iMagType");
    openapiFields.add("magType");
    openapiFields.add("algorithm");
    openapiFields.add("ingvQuality");
    openapiFields.add("phases");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("quakeId");
    openapiRequiredFields.add("version");
    openapiRequiredFields.add("mag");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to MagnitudeBaseEwMessage
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (MagnitudeBaseEwMessage.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in MagnitudeBaseEwMessage is not found in the empty JSON string", MagnitudeBaseEwMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!MagnitudeBaseEwMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MagnitudeBaseEwMessage` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MagnitudeBaseEwMessage.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (jsonObj.get("qAuthor") != null && !jsonObj.get("qAuthor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `qAuthor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("qAuthor").toString()));
      }
      if (jsonObj.get("magType") != null && !jsonObj.get("magType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `magType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("magType").toString()));
      }
      if (jsonObj.get("algorithm") != null && !jsonObj.get("algorithm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `algorithm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("algorithm").toString()));
      }
      if (jsonObj.get("ingvQuality") != null && !jsonObj.get("ingvQuality").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ingvQuality` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ingvQuality").toString()));
      }
      JsonArray jsonArrayphases = jsonObj.getAsJsonArray("phases");
      if (jsonArrayphases != null) {
        // ensure the json data is an array
        if (!jsonObj.get("phases").isJsonArray()) {
          throw new IllegalArgumentException(String.format("Expected the field `phases` to be an array in the JSON string but got `%s`", jsonObj.get("phases").toString()));
        }

        // validate the optional field `phases` (array)
        for (int i = 0; i < jsonArrayphases.size(); i++) {
          MagnitudePhasesInner.validateJsonObject(jsonArrayphases.get(i).getAsJsonObject());
        };
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MagnitudeBaseEwMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MagnitudeBaseEwMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MagnitudeBaseEwMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MagnitudeBaseEwMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<MagnitudeBaseEwMessage>() {
           @Override
           public void write(JsonWriter out, MagnitudeBaseEwMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MagnitudeBaseEwMessage read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MagnitudeBaseEwMessage given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MagnitudeBaseEwMessage
  * @throws IOException if the JSON string is invalid with respect to MagnitudeBaseEwMessage
  */
  public static MagnitudeBaseEwMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MagnitudeBaseEwMessage.class);
  }

 /**
  * Convert an instance of MagnitudeBaseEwMessage to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

