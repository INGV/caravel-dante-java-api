/*
 * Dante Web Services
 *       # Introduction   Dante is an API Web Service used for iteract with earthquake data stored in database (**quakedb**); the **quakedb** database schema is used at INGV.   Use other schema would require cration of specific `Model` and `Controller` but this is the potential of web services.      Dante provides a set of routes to store message **event**, **origin**, **magnitude**, **arrival**, **...**.      # Input   As input, Dante acept:   - A `json` message (view '**store**' spec below)    - An Eartworm `json` message (view '**earthworm api**' spec below) produced by **ew2openapi** module      # Output   As output, Dante has a RESTful api foreach database table and implement three specific routes:    - `events-group`: returns the preferred origin and the preferred magnitude from all clusterd events.    - `events`: returns the preferred origin and the preferred magnitude from the same instance.    - `event`: returns the full event (event, origins, magnitudes, arrivals, amplitude, etc...) from an **eventid** or **originid**_/_**originid**.        
 *
 * The version of the OpenAPI document: 2.62.0
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.dante.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import org.ingv.dante.model.ObjectMagnitudeForMagnitudesOriginsEventsAndEventsGroup;
import org.ingv.dante.model.ObjectOriginForMagnitudesOriginsEventsAndEventsGroup;
import org.ingv.dante.model.ObjectProvenaceForMagnitudesOriginsEventsAndEventsGroup;
import org.ingv.dante.model.ObjectVwCatalogInnerAllOfCatalog;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.ingv.dante.JSON;

/**
 * ObjectVwCatalogInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-12-07T15:09:07.364871Z[Etc/UTC]")
public class ObjectVwCatalogInner {
  public static final String SERIALIZED_NAME_CATALOG = "catalog";
  @SerializedName(SERIALIZED_NAME_CATALOG)
  private ObjectVwCatalogInnerAllOfCatalog catalog;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_ID_LOCALSPACE = "id_localspace";
  @SerializedName(SERIALIZED_NAME_ID_LOCALSPACE)
  private Long idLocalspace;

  public static final String SERIALIZED_NAME_LOCALSPACE = "localspace";
  @SerializedName(SERIALIZED_NAME_LOCALSPACE)
  private String localspace;

  public static final String SERIALIZED_NAME_EVENT_GROUP_ID = "event_group_id";
  @SerializedName(SERIALIZED_NAME_EVENT_GROUP_ID)
  private Long eventGroupId = 0l;

  public static final String SERIALIZED_NAME_PREFERRED_ORIGIN_ID = "preferred_origin_id";
  @SerializedName(SERIALIZED_NAME_PREFERRED_ORIGIN_ID)
  private Long preferredOriginId;

  public static final String SERIALIZED_NAME_PREFERRED_MAGNITUDE_ID = "preferred_magnitude_id";
  @SerializedName(SERIALIZED_NAME_PREFERRED_MAGNITUDE_ID)
  private Long preferredMagnitudeId;

  public static final String SERIALIZED_NAME_PREFERRED_FOCALMECHANISM_ID = "preferred_focalmechanism_id";
  @SerializedName(SERIALIZED_NAME_PREFERRED_FOCALMECHANISM_ID)
  private Long preferredFocalmechanismId;

  public static final String SERIALIZED_NAME_FLAGS = "flags";
  @SerializedName(SERIALIZED_NAME_FLAGS)
  private String flags;

  public static final String SERIALIZED_NAME_TYPE_GROUP = "type_group";
  @SerializedName(SERIALIZED_NAME_TYPE_GROUP)
  private Long typeGroup = 0l;

  public static final String SERIALIZED_NAME_TYPE_EVENT = "type_event";
  @SerializedName(SERIALIZED_NAME_TYPE_EVENT)
  private String typeEvent;

  public static final String SERIALIZED_NAME_MODIFIED = "modified";
  @SerializedName(SERIALIZED_NAME_MODIFIED)
  private OffsetDateTime modified;

  public static final String SERIALIZED_NAME_INSERTED = "inserted";
  @SerializedName(SERIALIZED_NAME_INSERTED)
  private OffsetDateTime inserted;

  public static final String SERIALIZED_NAME_ORIGIN = "origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  private ObjectOriginForMagnitudesOriginsEventsAndEventsGroup origin;

  public static final String SERIALIZED_NAME_MAGNITUDE = "magnitude";
  @SerializedName(SERIALIZED_NAME_MAGNITUDE)
  private ObjectMagnitudeForMagnitudesOriginsEventsAndEventsGroup magnitude;

  public static final String SERIALIZED_NAME_PROVENANCE = "provenance";
  @SerializedName(SERIALIZED_NAME_PROVENANCE)
  private ObjectProvenaceForMagnitudesOriginsEventsAndEventsGroup provenance;

  public ObjectVwCatalogInner() {
  }

  
  public ObjectVwCatalogInner(
     Long eventGroupId, 
     Long preferredOriginId, 
     Long preferredMagnitudeId, 
     Long preferredFocalmechanismId, 
     String flags, 
     Long typeGroup, 
     OffsetDateTime modified, 
     OffsetDateTime inserted
  ) {
    this();
    this.eventGroupId = eventGroupId;
    this.preferredOriginId = preferredOriginId;
    this.preferredMagnitudeId = preferredMagnitudeId;
    this.preferredFocalmechanismId = preferredFocalmechanismId;
    this.flags = flags;
    this.typeGroup = typeGroup;
    this.modified = modified;
    this.inserted = inserted;
  }

  public ObjectVwCatalogInner catalog(ObjectVwCatalogInnerAllOfCatalog catalog) {
    
    this.catalog = catalog;
    return this;
  }

   /**
   * Get catalog
   * @return catalog
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ObjectVwCatalogInnerAllOfCatalog getCatalog() {
    return catalog;
  }


  public void setCatalog(ObjectVwCatalogInnerAllOfCatalog catalog) {
    this.catalog = catalog;
  }


  public ObjectVwCatalogInner id(Long id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique incremental id | bigint(20)
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "14932631", value = "Unique incremental id | bigint(20)")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    this.id = id;
  }


  public ObjectVwCatalogInner idLocalspace(Long idLocalspace) {
    
    this.idLocalspace = idLocalspace;
    return this;
  }

   /**
   * Localspace Id | bigint(19)
   * @return idLocalspace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "182491", value = "Localspace Id | bigint(19)")

  public Long getIdLocalspace() {
    return idLocalspace;
  }


  public void setIdLocalspace(Long idLocalspace) {
    this.idLocalspace = idLocalspace;
  }


  public ObjectVwCatalogInner localspace(String localspace) {
    
    this.localspace = localspace;
    return this;
  }

   /**
   * Localspace name. i.e. hew1_mole, endeavour_mole | char(255)
   * @return localspace
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "hew1_mole", value = "Localspace name. i.e. hew1_mole, endeavour_mole | char(255)")

  public String getLocalspace() {
    return localspace;
  }


  public void setLocalspace(String localspace) {
    this.localspace = localspace;
  }


   /**
   * Link event group | bigint(20)
   * @return eventGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Link event group | bigint(20)")

  public Long getEventGroupId() {
    return eventGroupId;
  }




   /**
   * Link: preferred origin. It can be NULL. | bigint(20)
   * @return preferredOriginId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Link: preferred origin. It can be NULL. | bigint(20)")

  public Long getPreferredOriginId() {
    return preferredOriginId;
  }




   /**
   * Link: preferred magnitude. It can be NULL. | bigint(20)
   * @return preferredMagnitudeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Link: preferred magnitude. It can be NULL. | bigint(20)")

  public Long getPreferredMagnitudeId() {
    return preferredMagnitudeId;
  }




   /**
   * Link: preferred focalmechanism. It can be NULL. | bigint(20)
   * @return preferredFocalmechanismId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Link: preferred focalmechanism. It can be NULL. | bigint(20)")

  public Long getPreferredFocalmechanismId() {
    return preferredFocalmechanismId;
  }




   /**
   * Flags for origin | varchar(255)
   * @return flags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "DPC,twitter,shakemap4,FM", value = "Flags for origin | varchar(255)")

  public String getFlags() {
    return flags;
  }




   /**
   * Group type. Used by clustering algorithm | tinyint(4)
   * @return typeGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Group type. Used by clustering algorithm | tinyint(4)")

  public Long getTypeGroup() {
    return typeGroup;
  }




  public ObjectVwCatalogInner typeEvent(String typeEvent) {
    
    this.typeEvent = typeEvent;
    return this;
  }

   /**
   * Name | varchar(255)
   * @return typeEvent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "earthquake", value = "Name | varchar(255)")

  public String getTypeEvent() {
    return typeEvent;
  }


  public void setTypeEvent(String typeEvent) {
    this.typeEvent = typeEvent;
  }


   /**
   * Last Review | timestamp
   * @return modified
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-06-22T16:52:06.260Z", value = "Last Review | timestamp")

  public OffsetDateTime getModified() {
    return modified;
  }




   /**
   * Insert time | timestamp
   * @return inserted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2016-06-22T16:52:06.260Z", value = "Insert time | timestamp")

  public OffsetDateTime getInserted() {
    return inserted;
  }




  public ObjectVwCatalogInner origin(ObjectOriginForMagnitudesOriginsEventsAndEventsGroup origin) {
    
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ObjectOriginForMagnitudesOriginsEventsAndEventsGroup getOrigin() {
    return origin;
  }


  public void setOrigin(ObjectOriginForMagnitudesOriginsEventsAndEventsGroup origin) {
    this.origin = origin;
  }


  public ObjectVwCatalogInner magnitude(ObjectMagnitudeForMagnitudesOriginsEventsAndEventsGroup magnitude) {
    
    this.magnitude = magnitude;
    return this;
  }

   /**
   * Get magnitude
   * @return magnitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ObjectMagnitudeForMagnitudesOriginsEventsAndEventsGroup getMagnitude() {
    return magnitude;
  }


  public void setMagnitude(ObjectMagnitudeForMagnitudesOriginsEventsAndEventsGroup magnitude) {
    this.magnitude = magnitude;
  }


  public ObjectVwCatalogInner provenance(ObjectProvenaceForMagnitudesOriginsEventsAndEventsGroup provenance) {
    
    this.provenance = provenance;
    return this;
  }

   /**
   * Get provenance
   * @return provenance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ObjectProvenaceForMagnitudesOriginsEventsAndEventsGroup getProvenance() {
    return provenance;
  }


  public void setProvenance(ObjectProvenaceForMagnitudesOriginsEventsAndEventsGroup provenance) {
    this.provenance = provenance;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   */
  public ObjectVwCatalogInner putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectVwCatalogInner objectVwCatalogInner = (ObjectVwCatalogInner) o;
    return Objects.equals(this.catalog, objectVwCatalogInner.catalog) &&
        Objects.equals(this.id, objectVwCatalogInner.id) &&
        Objects.equals(this.idLocalspace, objectVwCatalogInner.idLocalspace) &&
        Objects.equals(this.localspace, objectVwCatalogInner.localspace) &&
        Objects.equals(this.eventGroupId, objectVwCatalogInner.eventGroupId) &&
        Objects.equals(this.preferredOriginId, objectVwCatalogInner.preferredOriginId) &&
        Objects.equals(this.preferredMagnitudeId, objectVwCatalogInner.preferredMagnitudeId) &&
        Objects.equals(this.preferredFocalmechanismId, objectVwCatalogInner.preferredFocalmechanismId) &&
        Objects.equals(this.flags, objectVwCatalogInner.flags) &&
        Objects.equals(this.typeGroup, objectVwCatalogInner.typeGroup) &&
        Objects.equals(this.typeEvent, objectVwCatalogInner.typeEvent) &&
        Objects.equals(this.modified, objectVwCatalogInner.modified) &&
        Objects.equals(this.inserted, objectVwCatalogInner.inserted) &&
        Objects.equals(this.origin, objectVwCatalogInner.origin) &&
        Objects.equals(this.magnitude, objectVwCatalogInner.magnitude) &&
        Objects.equals(this.provenance, objectVwCatalogInner.provenance)&&
        Objects.equals(this.additionalProperties, objectVwCatalogInner.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(catalog, id, idLocalspace, localspace, eventGroupId, preferredOriginId, preferredMagnitudeId, preferredFocalmechanismId, flags, typeGroup, typeEvent, modified, inserted, origin, magnitude, provenance, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectVwCatalogInner {\n");
    sb.append("    catalog: ").append(toIndentedString(catalog)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    idLocalspace: ").append(toIndentedString(idLocalspace)).append("\n");
    sb.append("    localspace: ").append(toIndentedString(localspace)).append("\n");
    sb.append("    eventGroupId: ").append(toIndentedString(eventGroupId)).append("\n");
    sb.append("    preferredOriginId: ").append(toIndentedString(preferredOriginId)).append("\n");
    sb.append("    preferredMagnitudeId: ").append(toIndentedString(preferredMagnitudeId)).append("\n");
    sb.append("    preferredFocalmechanismId: ").append(toIndentedString(preferredFocalmechanismId)).append("\n");
    sb.append("    flags: ").append(toIndentedString(flags)).append("\n");
    sb.append("    typeGroup: ").append(toIndentedString(typeGroup)).append("\n");
    sb.append("    typeEvent: ").append(toIndentedString(typeEvent)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    inserted: ").append(toIndentedString(inserted)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    magnitude: ").append(toIndentedString(magnitude)).append("\n");
    sb.append("    provenance: ").append(toIndentedString(provenance)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("catalog");
    openapiFields.add("id");
    openapiFields.add("id_localspace");
    openapiFields.add("localspace");
    openapiFields.add("event_group_id");
    openapiFields.add("preferred_origin_id");
    openapiFields.add("preferred_magnitude_id");
    openapiFields.add("preferred_focalmechanism_id");
    openapiFields.add("flags");
    openapiFields.add("type_group");
    openapiFields.add("type_event");
    openapiFields.add("modified");
    openapiFields.add("inserted");
    openapiFields.add("origin");
    openapiFields.add("magnitude");
    openapiFields.add("provenance");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ObjectVwCatalogInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (ObjectVwCatalogInner.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in ObjectVwCatalogInner is not found in the empty JSON string", ObjectVwCatalogInner.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `catalog`
      if (jsonObj.get("catalog") != null && !jsonObj.get("catalog").isJsonNull()) {
        ObjectVwCatalogInnerAllOfCatalog.validateJsonObject(jsonObj.getAsJsonObject("catalog"));
      }
      if ((jsonObj.get("localspace") != null && !jsonObj.get("localspace").isJsonNull()) && !jsonObj.get("localspace").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `localspace` to be a primitive type in the JSON string but got `%s`", jsonObj.get("localspace").toString()));
      }
      if ((jsonObj.get("flags") != null && !jsonObj.get("flags").isJsonNull()) && !jsonObj.get("flags").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flags` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flags").toString()));
      }
      if ((jsonObj.get("type_event") != null && !jsonObj.get("type_event").isJsonNull()) && !jsonObj.get("type_event").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type_event` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type_event").toString()));
      }
      // validate the optional field `origin`
      if (jsonObj.get("origin") != null && !jsonObj.get("origin").isJsonNull()) {
        ObjectOriginForMagnitudesOriginsEventsAndEventsGroup.validateJsonObject(jsonObj.getAsJsonObject("origin"));
      }
      // validate the optional field `magnitude`
      if (jsonObj.get("magnitude") != null && !jsonObj.get("magnitude").isJsonNull()) {
        ObjectMagnitudeForMagnitudesOriginsEventsAndEventsGroup.validateJsonObject(jsonObj.getAsJsonObject("magnitude"));
      }
      // validate the optional field `provenance`
      if (jsonObj.get("provenance") != null && !jsonObj.get("provenance").isJsonNull()) {
        ObjectProvenaceForMagnitudesOriginsEventsAndEventsGroup.validateJsonObject(jsonObj.getAsJsonObject("provenance"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ObjectVwCatalogInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ObjectVwCatalogInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ObjectVwCatalogInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ObjectVwCatalogInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ObjectVwCatalogInner>() {
           @Override
           public void write(JsonWriter out, ObjectVwCatalogInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ObjectVwCatalogInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ObjectVwCatalogInner instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else { // non-primitive type
                   instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ObjectVwCatalogInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ObjectVwCatalogInner
  * @throws IOException if the JSON string is invalid with respect to ObjectVwCatalogInner
  */
  public static ObjectVwCatalogInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ObjectVwCatalogInner.class);
  }

 /**
  * Convert an instance of ObjectVwCatalogInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

