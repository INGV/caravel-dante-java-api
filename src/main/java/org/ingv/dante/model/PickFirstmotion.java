/*
 * Dante Web Services
 * # Introduction  Dante is a RESTful API service designed to interact with seismic data stored in the **quakedb** database schema used at INGV. Dante can be extended to other database schemas by creating custom `Model` and `Controller` implementations.  Dante provides a set of routes to store message: **event**, **origin**, **magnitude**, **arrival**, **...**.  ## Input  Dante accepts: - A `json` message (view '**store**' spec below). - An Eartworm `json` message (view '**earthworm api**' spec below) produced by **ew2openapi** module.  ## Output  Dante exposes RESTful routes for each database table and implements three specialized endpoints: - `/events-group`: returns the preferred origin and magnitude for all clustered events. - `/events`: returns the preferred origin and magnitude for a single event instance. - `/event`: returns the full event details (event, origins, magnitudes, arrivals, amplitudes, etc.) based on an **eventid** or **originid**. 
 *
 * The version of the OpenAPI document: 3.48.0-dev
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.dante.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * First motion polarity associated with the pick | varchar(1)
 */
@JsonAdapter(PickFirstmotion.Adapter.class)
public enum PickFirstmotion {
  
  U("U"),
  
  QUESTION_MARK("?"),
  
  D("D");

  private String value;

  PickFirstmotion(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static PickFirstmotion fromValue(String value) {
    for (PickFirstmotion b : PickFirstmotion.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<PickFirstmotion> {
    @Override
    public void write(final JsonWriter jsonWriter, final PickFirstmotion enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public PickFirstmotion read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return PickFirstmotion.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    PickFirstmotion.fromValue(value);
  }
}

