/*
 * Dante Web Services
 * # Introduction  Dante is a RESTful API service designed to interact with seismic data stored in the **quakedb** database schema used at INGV. Dante can be extended to other database schemas by creating custom `Model` and `Controller` implementations.  Dante provides a set of routes to store message: **event**, **origin**, **magnitude**, **arrival**, **...**.  ## Input  Dante accepts: - A `json` message (view '**store**' spec below). - An Eartworm `json` message (view '**earthworm api**' spec below) produced by **ew2openapi** module.  ## Output  Dante exposes RESTful routes for each database table and implements three specialized endpoints: - `/events-group`: returns the preferred origin and magnitude for all clustered events. - `/events`: returns the preferred origin and magnitude for a single event instance. - `/event`: returns the full event details (event, origins, magnitudes, arrivals, amplitudes, etc.) based on an **eventid** or **originid**. 
 *
 * The version of the OpenAPI document: 3.48.0-dev
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.dante.api;

import org.ingv.dante.ApiException;
import org.ingv.dante.model.Problem;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DeleteApi
 */
@Disabled
public class DeleteApiTest {

    private final DeleteApi api = new DeleteApi();

    /**
     * Delete an existing localspace
     *
     * Delete an existing localspace.&lt;/br&gt; To use this API you must be authenticated.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteLocalspaceTest() throws ApiException {
        Long id = null;
        api.deleteLocalspace(id);
        // TODO: test validations
    }

    /**
     * Delete an existing origin-flag
     *
     * Delete an existing origin-flag.&lt;/br&gt; To use this API you must be authenticated.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteOriginFlagTest() throws ApiException {
        Long id = null;
        api.deleteOriginFlag(id);
        // TODO: test validations
    }

    /**
     * Delete an existing provenance
     *
     * Delete an existing provenance.&lt;/br&gt; To use this API you must be authenticated.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProvenanceTest() throws ApiException {
        Long id = null;
        api.deleteProvenance(id);
        // TODO: test validations
    }

    /**
     * Delete an existing type_event
     *
     * Delete an existing type_event.&lt;/br&gt; To use this API you must be authenticated.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTypeEventTest() throws ApiException {
        Long id = null;
        api.deleteTypeEvent(id);
        // TODO: test validations
    }

    /**
     * Delete an existing type_magnitude
     *
     * Delete an existing type_magnitude.&lt;/br&gt; To use this API you must be authenticated.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTypeMagnitudeTest() throws ApiException {
        Long id = null;
        api.deleteTypeMagnitude(id);
        // TODO: test validations
    }

    /**
     * Delete an existing type_origin
     *
     * Delete an existing type_origin.&lt;/br&gt; To use this API you must be authenticated.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTypeOriginTest() throws ApiException {
        Long id = null;
        api.deleteTypeOrigin(id);
        // TODO: test validations
    }

}
