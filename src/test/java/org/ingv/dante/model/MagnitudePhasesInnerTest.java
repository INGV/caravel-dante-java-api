/*
 * Dante Web Services
 * # Introduction  Dante is a RESTful API service designed to interact with seismic data stored in the **quakedb** database schema used at INGV. Dante can be extended to other database schemas by creating custom `Model` and `Controller` implementations.  Dante provides a set of routes to store message: **event**, **origin**, **magnitude**, **arrival**, **...**.  ## Input  Dante accepts: - A `json` message (view '**store**' spec below). - An Eartworm `json` message (view '**earthworm api**' spec below) produced by **ew2openapi** module.  ## Output  Dante exposes RESTful routes for each database table and implements three specialized endpoints: - `/events-group`: returns the preferred origin and magnitude for all clustered events. - `/events`: returns the preferred origin and magnitude for a single event instance. - `/event`: returns the full event details (event, origins, magnitudes, arrivals, amplitudes, etc.) based on an **eventid** or **originid**. 
 *
 * The version of the OpenAPI document: 3.48.0-dev
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.dante.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MagnitudePhasesInner
 */
public class MagnitudePhasesInnerTest {
    private final MagnitudePhasesInner model = new MagnitudePhasesInner();

    /**
     * Model tests for MagnitudePhasesInner
     */
    @Test
    public void testMagnitudePhasesInner() {
        // TODO: test MagnitudePhasesInner
    }

    /**
     * Test the property 'net'
     */
    @Test
    public void netTest() {
        // TODO: test net
    }

    /**
     * Test the property 'sta'
     */
    @Test
    public void staTest() {
        // TODO: test sta
    }

    /**
     * Test the property 'comp'
     */
    @Test
    public void compTest() {
        // TODO: test comp
    }

    /**
     * Test the property 'loc'
     */
    @Test
    public void locTest() {
        // TODO: test loc
    }

    /**
     * Test the property 'mag'
     */
    @Test
    public void magTest() {
        // TODO: test mag
    }

    /**
     * Test the property 'dist'
     */
    @Test
    public void distTest() {
        // TODO: test dist
    }

    /**
     * Test the property 'corr'
     */
    @Test
    public void corrTest() {
        // TODO: test corr
    }

    /**
     * Test the property 'time1'
     */
    @Test
    public void time1Test() {
        // TODO: test time1
    }

    /**
     * Test the property 'amp1'
     */
    @Test
    public void amp1Test() {
        // TODO: test amp1
    }

    /**
     * Test the property 'period1'
     */
    @Test
    public void period1Test() {
        // TODO: test period1
    }

    /**
     * Test the property 'time2'
     */
    @Test
    public void time2Test() {
        // TODO: test time2
    }

    /**
     * Test the property 'amp2'
     */
    @Test
    public void amp2Test() {
        // TODO: test amp2
    }

    /**
     * Test the property 'period2'
     */
    @Test
    public void period2Test() {
        // TODO: test period2
    }

}
