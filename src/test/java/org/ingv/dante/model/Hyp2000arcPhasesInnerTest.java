/*
 * Dante Web Services
 *       # Introduction   Dante is an API Web Service used for iteract with earthquake data stored in database (**quakedb**); the **quakedb** database schema is used at INGV.   Use other schema would require cration of specific `Model` and `Controller` but this is the potential of web services.      Dante provides a set of routes to store message **event**, **origin**, **magnitude**, **arrival**, **...**.      # Input   As input, Dante acept:   - A `json` message (view '**store**' spec below)    - An Eartworm `json` message (view '**earthworm api**' spec below) produced by **ew2openapi** module      # Output   As output, Dante has a RESTful api foreach database table and implement three specific routes:    - `events-group`: returns the preferred origin and the preferred magnitude from all clusterd events.    - `events`: returns the preferred origin and the preferred magnitude from the same instance.    - `event`: returns the full event (event, origins, magnitudes, arrivals, amplitude, etc...) from an **eventid** or **originid**_/_**originid**.        
 *
 * The version of the OpenAPI document: 3.34.0
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.dante.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Hyp2000arcPhasesInner
 */
public class Hyp2000arcPhasesInnerTest {
    private final Hyp2000arcPhasesInner model = new Hyp2000arcPhasesInner();

    /**
     * Model tests for Hyp2000arcPhasesInner
     */
    @Test
    public void testHyp2000arcPhasesInner() {
        // TODO: test Hyp2000arcPhasesInner
    }

    /**
     * Test the property 'net'
     */
    @Test
    public void netTest() {
        // TODO: test net
    }

    /**
     * Test the property 'sta'
     */
    @Test
    public void staTest() {
        // TODO: test sta
    }

    /**
     * Test the property 'comp'
     */
    @Test
    public void compTest() {
        // TODO: test comp
    }

    /**
     * Test the property 'loc'
     */
    @Test
    public void locTest() {
        // TODO: test loc
    }

    /**
     * Test the property 'plabel'
     */
    @Test
    public void plabelTest() {
        // TODO: test plabel
    }

    /**
     * Test the property 'slabel'
     */
    @Test
    public void slabelTest() {
        // TODO: test slabel
    }

    /**
     * Test the property 'ponset'
     */
    @Test
    public void ponsetTest() {
        // TODO: test ponset
    }

    /**
     * Test the property 'sonset'
     */
    @Test
    public void sonsetTest() {
        // TODO: test sonset
    }

    /**
     * Test the property 'pat'
     */
    @Test
    public void patTest() {
        // TODO: test pat
    }

    /**
     * Test the property 'sat'
     */
    @Test
    public void satTest() {
        // TODO: test sat
    }

    /**
     * Test the property 'pres'
     */
    @Test
    public void presTest() {
        // TODO: test pres
    }

    /**
     * Test the property 'sres'
     */
    @Test
    public void sresTest() {
        // TODO: test sres
    }

    /**
     * Test the property 'pqual'
     */
    @Test
    public void pqualTest() {
        // TODO: test pqual
    }

    /**
     * Test the property 'squal'
     */
    @Test
    public void squalTest() {
        // TODO: test squal
    }

    /**
     * Test the property 'codalen'
     */
    @Test
    public void codalenTest() {
        // TODO: test codalen
    }

    /**
     * Test the property 'codawt'
     */
    @Test
    public void codawtTest() {
        // TODO: test codawt
    }

    /**
     * Test the property 'pfm'
     */
    @Test
    public void pfmTest() {
        // TODO: test pfm
    }

    /**
     * Test the property 'sfm'
     */
    @Test
    public void sfmTest() {
        // TODO: test sfm
    }

    /**
     * Test the property 'datasrc'
     */
    @Test
    public void datasrcTest() {
        // TODO: test datasrc
    }

    /**
     * Test the property 'md'
     */
    @Test
    public void mdTest() {
        // TODO: test md
    }

    /**
     * Test the property 'azm'
     */
    @Test
    public void azmTest() {
        // TODO: test azm
    }

    /**
     * Test the property 'takeoff'
     */
    @Test
    public void takeoffTest() {
        // TODO: test takeoff
    }

    /**
     * Test the property 'dist'
     */
    @Test
    public void distTest() {
        // TODO: test dist
    }

    /**
     * Test the property 'pwt'
     */
    @Test
    public void pwtTest() {
        // TODO: test pwt
    }

    /**
     * Test the property 'swt'
     */
    @Test
    public void swtTest() {
        // TODO: test swt
    }

    /**
     * Test the property 'pamp'
     */
    @Test
    public void pampTest() {
        // TODO: test pamp
    }

    /**
     * Test the property 'codalenObs'
     */
    @Test
    public void codalenObsTest() {
        // TODO: test codalenObs
    }

    /**
     * Test the property 'ccntr'
     */
    @Test
    public void ccntrTest() {
        // TODO: test ccntr
    }

    /**
     * Test the property 'caav'
     */
    @Test
    public void caavTest() {
        // TODO: test caav
    }

    /**
     * Test the property 'amplitude'
     */
    @Test
    public void amplitudeTest() {
        // TODO: test amplitude
    }

    /**
     * Test the property 'ampUnitsCode'
     */
    @Test
    public void ampUnitsCodeTest() {
        // TODO: test ampUnitsCode
    }

    /**
     * Test the property 'ampType'
     */
    @Test
    public void ampTypeTest() {
        // TODO: test ampType
    }

    /**
     * Test the property 'ampMag'
     */
    @Test
    public void ampMagTest() {
        // TODO: test ampMag
    }

    /**
     * Test the property 'ampMagWeightCode'
     */
    @Test
    public void ampMagWeightCodeTest() {
        // TODO: test ampMagWeightCode
    }

    /**
     * Test the property 'importanceP'
     */
    @Test
    public void importancePTest() {
        // TODO: test importanceP
    }

    /**
     * Test the property 'importanceS'
     */
    @Test
    public void importanceSTest() {
        // TODO: test importanceS
    }

}
