/*
 * Dante Web Services
 *       # Introduction   Dante is an API Web Service used for iteract with earthquake data stored in database (**quakedb**); the **quakedb** database schema is used at INGV.   Use other schema would require cration of specific `Model` and `Controller` but this is the potential of web services.      Dante provides a set of routes to store message **event**, **origin**, **magnitude**, **arrival**, **...**.      # Input   As input, Dante acept:   - A `json` message (view '**store**' spec below)    - An Eartworm `json` message (view '**earthworm api**' spec below) produced by **ew2openapi** module      # Output   As output, Dante has a RESTful api foreach database table and implement three specific routes:    - `events-group`: returns the preferred origin and the preferred magnitude from all clusterd events.    - `events`: returns the preferred origin and the preferred magnitude from the same instance.    - `event`: returns the full event (event, origins, magnitudes, arrivals, amplitude, etc...) from an **eventid** or **originid**_/_**originid**.        
 *
 * The version of the OpenAPI document: 3.31.0-dev
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.dante.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.ingv.dante.model.ObjectLocalspace;
import org.ingv.dante.model.ObjectProvenance;
import org.ingv.dante.model.ObjectStationmagnitude;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ObjectMagnitude
 */
public class ObjectMagnitudeTest {
    private final ObjectMagnitude model = new ObjectMagnitude();

    /**
     * Model tests for ObjectMagnitude
     */
    @Test
    public void testObjectMagnitude() {
        // TODO: test ObjectMagnitude
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'modified'
     */
    @Test
    public void modifiedTest() {
        // TODO: test modified
    }

    /**
     * Test the property 'inserted'
     */
    @Test
    public void insertedTest() {
        // TODO: test inserted
    }

    /**
     * Test the property 'idLocalspace'
     */
    @Test
    public void idLocalspaceTest() {
        // TODO: test idLocalspace
    }

    /**
     * Test the property 'mag'
     */
    @Test
    public void magTest() {
        // TODO: test mag
    }

    /**
     * Test the property 'lowerUncertainty'
     */
    @Test
    public void lowerUncertaintyTest() {
        // TODO: test lowerUncertainty
    }

    /**
     * Test the property 'upperUncertainty'
     */
    @Test
    public void upperUncertaintyTest() {
        // TODO: test upperUncertainty
    }

    /**
     * Test the property 'confidenceLevel'
     */
    @Test
    public void confidenceLevelTest() {
        // TODO: test confidenceLevel
    }

    /**
     * Test the property 'quality'
     */
    @Test
    public void qualityTest() {
        // TODO: test quality
    }

    /**
     * Test the property 'minDistance'
     */
    @Test
    public void minDistanceTest() {
        // TODO: test minDistance
    }

    /**
     * Test the property 'azimut'
     */
    @Test
    public void azimutTest() {
        // TODO: test azimut
    }

    /**
     * Test the property 'nsta'
     */
    @Test
    public void nstaTest() {
        // TODO: test nsta
    }

    /**
     * Test the property 'ncha'
     */
    @Test
    public void nchaTest() {
        // TODO: test ncha
    }

    /**
     * Test the property 'nstaUsed'
     */
    @Test
    public void nstaUsedTest() {
        // TODO: test nstaUsed
    }

    /**
     * Test the property 'nchaUsed'
     */
    @Test
    public void nchaUsedTest() {
        // TODO: test nchaUsed
    }

    /**
     * Test the property 'magQuality'
     */
    @Test
    public void magQualityTest() {
        // TODO: test magQuality
    }

    /**
     * Test the property 'typeMagnitude'
     */
    @Test
    public void typeMagnitudeTest() {
        // TODO: test typeMagnitude
    }

    /**
     * Test the property 'typeMagnitudeExtended'
     */
    @Test
    public void typeMagnitudeExtendedTest() {
        // TODO: test typeMagnitudeExtended
    }

    /**
     * Test the property 'typeMagnitudePriority'
     */
    @Test
    public void typeMagnitudePriorityTest() {
        // TODO: test typeMagnitudePriority
    }

    /**
     * Test the property 'localspace'
     */
    @Test
    public void localspaceTest() {
        // TODO: test localspace
    }

    /**
     * Test the property 'provenance'
     */
    @Test
    public void provenanceTest() {
        // TODO: test provenance
    }

    /**
     * Test the property 'stationmagnitudes'
     */
    @Test
    public void stationmagnitudesTest() {
        // TODO: test stationmagnitudes
    }

}
