/*
 * Dante Web Services
 * # Introduction  Dante is a RESTful API service designed to interact with seismic data stored in the **quakedb** database schema used at INGV. Dante can be extended to other database schemas by creating custom `Model` and `Controller` implementations.  Dante provides a set of routes to store message: **event**, **origin**, **magnitude**, **arrival**, **...**.  ## Input  Dante accepts: - A `json` message (view '**store**' spec below). - An Eartworm `json` message (view '**earthworm api**' spec below) produced by **ew2openapi** module.  ## Output  Dante exposes RESTful routes for each database table and implements three specialized endpoints: - `/events-group`: returns the preferred origin and magnitude for all clustered events. - `/events`: returns the preferred origin and magnitude for a single event instance. - `/event`: returns the full event details (event, origins, magnitudes, arrivals, amplitudes, etc.) based on an **eventid** or **originid**. 
 *
 * The version of the OpenAPI document: 3.48.0-dev
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.dante.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.ingv.dante.model.MagnitudePhasesInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MagnitudeSchemaEwMessage
 */
public class MagnitudeSchemaEwMessageTest {
    private final MagnitudeSchemaEwMessage model = new MagnitudeSchemaEwMessage();

    /**
     * Model tests for MagnitudeSchemaEwMessage
     */
    @Test
    public void testMagnitudeSchemaEwMessage() {
        // TODO: test MagnitudeSchemaEwMessage
    }

    /**
     * Test the property 'quakeId'
     */
    @Test
    public void quakeIdTest() {
        // TODO: test quakeId
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'mag'
     */
    @Test
    public void magTest() {
        // TODO: test mag
    }

    /**
     * Test the property 'error'
     */
    @Test
    public void errorTest() {
        // TODO: test error
    }

    /**
     * Test the property 'quality'
     */
    @Test
    public void qualityTest() {
        // TODO: test quality
    }

    /**
     * Test the property 'minDist'
     */
    @Test
    public void minDistTest() {
        // TODO: test minDist
    }

    /**
     * Test the property 'azimuth'
     */
    @Test
    public void azimuthTest() {
        // TODO: test azimuth
    }

    /**
     * Test the property 'nStations'
     */
    @Test
    public void nStationsTest() {
        // TODO: test nStations
    }

    /**
     * Test the property 'nChannels'
     */
    @Test
    public void nChannelsTest() {
        // TODO: test nChannels
    }

    /**
     * Test the property 'qAuthor'
     */
    @Test
    public void qAuthorTest() {
        // TODO: test qAuthor
    }

    /**
     * Test the property 'qddsVersion'
     */
    @Test
    public void qddsVersionTest() {
        // TODO: test qddsVersion
    }

    /**
     * Test the property 'iMagType'
     */
    @Test
    public void iMagTypeTest() {
        // TODO: test iMagType
    }

    /**
     * Test the property 'magType'
     */
    @Test
    public void magTypeTest() {
        // TODO: test magType
    }

    /**
     * Test the property 'algorithm'
     */
    @Test
    public void algorithmTest() {
        // TODO: test algorithm
    }

    /**
     * Test the property 'ingvQuality'
     */
    @Test
    public void ingvQualityTest() {
        // TODO: test ingvQuality
    }

    /**
     * Test the property 'phases'
     */
    @Test
    public void phasesTest() {
        // TODO: test phases
    }

}
