/*
 * Dante Web Services
 * # Introduction  Dante is a RESTful API service designed to interact with seismic data stored in the **quakedb** database schema used at INGV. Dante can be extended to other database schemas by creating custom `Model` and `Controller` implementations.  Dante provides a set of routes to store message: **event**, **origin**, **magnitude**, **arrival**, **...**.  ## Input  Dante accepts: - A `json` message (view '**store**' spec below). - An Eartworm `json` message (view '**earthworm api**' spec below) produced by **ew2openapi** module.  ## Output  Dante exposes RESTful routes for each database table and implements three specialized endpoints: - `/events-group`: returns the preferred origin and magnitude for all clustered events. - `/events`: returns the preferred origin and magnitude for a single event instance. - `/event`: returns the full event details (event, origins, magnitudes, arrivals, amplitudes, etc.) based on an **eventid** or **originid**. 
 *
 * The version of the OpenAPI document: 3.48.0-dev
 * Contact: valentino.lauciani@ingv.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.ingv.dante.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.ingv.dante.model.ObjectLocalspace;
import org.ingv.dante.model.ObjectOrigin;
import org.ingv.dante.model.ObjectProvenance;
import org.ingv.dante.model.ObjectStrongmotion;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ObjectEvent
 */
public class ObjectEventTest {
    private final ObjectEvent model = new ObjectEvent();

    /**
     * Model tests for ObjectEvent
     */
    @Test
    public void testObjectEvent() {
        // TODO: test ObjectEvent
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'modified'
     */
    @Test
    public void modifiedTest() {
        // TODO: test modified
    }

    /**
     * Test the property 'inserted'
     */
    @Test
    public void insertedTest() {
        // TODO: test inserted
    }

    /**
     * Test the property 'idLocalspace'
     */
    @Test
    public void idLocalspaceTest() {
        // TODO: test idLocalspace
    }

    /**
     * Test the property 'typeEvent'
     */
    @Test
    public void typeEventTest() {
        // TODO: test typeEvent
    }

    /**
     * Test the property 'flags'
     */
    @Test
    public void flagsTest() {
        // TODO: test flags
    }

    /**
     * Test the property 'eventGroupId'
     */
    @Test
    public void eventGroupIdTest() {
        // TODO: test eventGroupId
    }

    /**
     * Test the property 'preferredOriginId'
     */
    @Test
    public void preferredOriginIdTest() {
        // TODO: test preferredOriginId
    }

    /**
     * Test the property 'preferredMagnitudeId'
     */
    @Test
    public void preferredMagnitudeIdTest() {
        // TODO: test preferredMagnitudeId
    }

    /**
     * Test the property 'preferredFocalmechanismId'
     */
    @Test
    public void preferredFocalmechanismIdTest() {
        // TODO: test preferredFocalmechanismId
    }

    /**
     * Test the property 'setPreferredOriginIdLocalspace'
     */
    @Test
    public void setPreferredOriginIdLocalspaceTest() {
        // TODO: test setPreferredOriginIdLocalspace
    }

    /**
     * Test the property 'setPreferredMagnitudeIdLocalspace'
     */
    @Test
    public void setPreferredMagnitudeIdLocalspaceTest() {
        // TODO: test setPreferredMagnitudeIdLocalspace
    }

    /**
     * Test the property 'typeGroup'
     */
    @Test
    public void typeGroupTest() {
        // TODO: test typeGroup
    }

    /**
     * Test the property 'provenance'
     */
    @Test
    public void provenanceTest() {
        // TODO: test provenance
    }

    /**
     * Test the property 'localspace'
     */
    @Test
    public void localspaceTest() {
        // TODO: test localspace
    }

    /**
     * Test the property 'origins'
     */
    @Test
    public void originsTest() {
        // TODO: test origins
    }

    /**
     * Test the property 'strongmotions'
     */
    @Test
    public void strongmotionsTest() {
        // TODO: test strongmotions
    }

}
